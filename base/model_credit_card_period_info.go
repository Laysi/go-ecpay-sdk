/*
 * ECPay API
 *
 * 綠界金流 API 定義文件
 *
 * API version: 0.0.17
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package base

import (
	"encoding/json"
)

// CreditCardPeriodInfo struct for CreditCardPeriodInfo
type CreditCardPeriodInfo struct {
	// **特店編號(由綠界提供)**
	MerchantID *string `json:"MerchantID,omitempty"`
	// **特店交易編號(由特店提供)** 訂單產生時傳送給綠界的特店交易編號。
	MerchantTradeNo *string `json:"MerchantTradeNo,omitempty"`
	// **綠界的交易編號** 首次授權所產生的綠界交易編號
	TradeNo *string `json:"TradeNo,omitempty"`
	// **交易狀態**    回傳值為 1 時代表授權成功，其餘為失敗，失敗代碼請參考交易訊息代碼一覽表
	RtnCode    *int                  `json:"RtnCode,omitempty"`
	PeriodType *CreditPeriodTypeEnum `json:"PeriodType,omitempty"`
	// **執行頻率**  訂單建立時所設定的執行頻率
	Frequency *int `json:"Frequency,omitempty"`
	// **執行次數**  訂單建立時所設定的執行頻率
	ExecTimes *int `json:"ExecTimes,omitempty"`
	// **每次授權金額**  訂單建立時的每次要授權金額
	PeriodAmount *int `json:"PeriodAmount,omitempty"`
	// **授權金額** 所授權的金額
	Amount *int `json:"amount,omitempty"`
	// **授權交易單號** 所授權的交易單號
	Gwsr *int `json:"gwsr,omitempty"`
	// **授權成功處理時間** 格式為 yyyy/MM/dd HH:mm:ss
	ProcessDate *ECPayDateTime `json:"process_date,omitempty"`
	// **授權碼** 授權碼
	AuthCode *string `json:"auth_code,omitempty"`
	// **卡片的末 4 碼** 卡片的末四碼
	Card4no *string `json:"card4no,omitempty"`
	// **卡片的前 6 碼** 卡片的前六碼
	Card6no *string `json:"card6no,omitempty"`
	// **已成功授權次數合計** 目前已成功授權的次數
	TotalSuccessTimes *int `json:"TotalSuccessTimes,omitempty"`
	// **已成功授權總金額** 目前已成功授權的金額合計
	TotalSuccessAmount *int             `json:"TotalSuccessAmount,omitempty"`
	ExecStatus         *ExecStatusEnum  `json:"ExecStatus,omitempty"`
	ExecLogRecord      *[]ExecLogRecord `json:"ExecLogRecord,omitempty"`
}

// NewCreditCardPeriodInfo instantiates a new CreditCardPeriodInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreditCardPeriodInfo() *CreditCardPeriodInfo {
	this := CreditCardPeriodInfo{}
	return &this
}

// NewCreditCardPeriodInfoWithDefaults instantiates a new CreditCardPeriodInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreditCardPeriodInfoWithDefaults() *CreditCardPeriodInfo {
	this := CreditCardPeriodInfo{}
	return &this
}

// GetMerchantID returns the MerchantID field value if set, zero value otherwise.
func (o *CreditCardPeriodInfo) GetMerchantID() string {
	if o == nil || o.MerchantID == nil {
		var ret string
		return ret
	}
	return *o.MerchantID
}

// GetMerchantIDOk returns a tuple with the MerchantID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardPeriodInfo) GetMerchantIDOk() (*string, bool) {
	if o == nil || o.MerchantID == nil {
		return nil, false
	}
	return o.MerchantID, true
}

// HasMerchantID returns a boolean if a field has been set.
func (o *CreditCardPeriodInfo) HasMerchantID() bool {
	if o != nil && o.MerchantID != nil {
		return true
	}

	return false
}

// SetMerchantID gets a reference to the given string and assigns it to the MerchantID field.
func (o *CreditCardPeriodInfo) SetMerchantID(v string) {
	o.MerchantID = &v
}

// GetMerchantTradeNo returns the MerchantTradeNo field value if set, zero value otherwise.
func (o *CreditCardPeriodInfo) GetMerchantTradeNo() string {
	if o == nil || o.MerchantTradeNo == nil {
		var ret string
		return ret
	}
	return *o.MerchantTradeNo
}

// GetMerchantTradeNoOk returns a tuple with the MerchantTradeNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardPeriodInfo) GetMerchantTradeNoOk() (*string, bool) {
	if o == nil || o.MerchantTradeNo == nil {
		return nil, false
	}
	return o.MerchantTradeNo, true
}

// HasMerchantTradeNo returns a boolean if a field has been set.
func (o *CreditCardPeriodInfo) HasMerchantTradeNo() bool {
	if o != nil && o.MerchantTradeNo != nil {
		return true
	}

	return false
}

// SetMerchantTradeNo gets a reference to the given string and assigns it to the MerchantTradeNo field.
func (o *CreditCardPeriodInfo) SetMerchantTradeNo(v string) {
	o.MerchantTradeNo = &v
}

// GetTradeNo returns the TradeNo field value if set, zero value otherwise.
func (o *CreditCardPeriodInfo) GetTradeNo() string {
	if o == nil || o.TradeNo == nil {
		var ret string
		return ret
	}
	return *o.TradeNo
}

// GetTradeNoOk returns a tuple with the TradeNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardPeriodInfo) GetTradeNoOk() (*string, bool) {
	if o == nil || o.TradeNo == nil {
		return nil, false
	}
	return o.TradeNo, true
}

// HasTradeNo returns a boolean if a field has been set.
func (o *CreditCardPeriodInfo) HasTradeNo() bool {
	if o != nil && o.TradeNo != nil {
		return true
	}

	return false
}

// SetTradeNo gets a reference to the given string and assigns it to the TradeNo field.
func (o *CreditCardPeriodInfo) SetTradeNo(v string) {
	o.TradeNo = &v
}

// GetRtnCode returns the RtnCode field value if set, zero value otherwise.
func (o *CreditCardPeriodInfo) GetRtnCode() int {
	if o == nil || o.RtnCode == nil {
		var ret int
		return ret
	}
	return *o.RtnCode
}

// GetRtnCodeOk returns a tuple with the RtnCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardPeriodInfo) GetRtnCodeOk() (*int, bool) {
	if o == nil || o.RtnCode == nil {
		return nil, false
	}
	return o.RtnCode, true
}

// HasRtnCode returns a boolean if a field has been set.
func (o *CreditCardPeriodInfo) HasRtnCode() bool {
	if o != nil && o.RtnCode != nil {
		return true
	}

	return false
}

// SetRtnCode gets a reference to the given int and assigns it to the RtnCode field.
func (o *CreditCardPeriodInfo) SetRtnCode(v int) {
	o.RtnCode = &v
}

// GetPeriodType returns the PeriodType field value if set, zero value otherwise.
func (o *CreditCardPeriodInfo) GetPeriodType() CreditPeriodTypeEnum {
	if o == nil || o.PeriodType == nil {
		var ret CreditPeriodTypeEnum
		return ret
	}
	return *o.PeriodType
}

// GetPeriodTypeOk returns a tuple with the PeriodType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardPeriodInfo) GetPeriodTypeOk() (*CreditPeriodTypeEnum, bool) {
	if o == nil || o.PeriodType == nil {
		return nil, false
	}
	return o.PeriodType, true
}

// HasPeriodType returns a boolean if a field has been set.
func (o *CreditCardPeriodInfo) HasPeriodType() bool {
	if o != nil && o.PeriodType != nil {
		return true
	}

	return false
}

// SetPeriodType gets a reference to the given CreditPeriodTypeEnum and assigns it to the PeriodType field.
func (o *CreditCardPeriodInfo) SetPeriodType(v CreditPeriodTypeEnum) {
	o.PeriodType = &v
}

// GetFrequency returns the Frequency field value if set, zero value otherwise.
func (o *CreditCardPeriodInfo) GetFrequency() int {
	if o == nil || o.Frequency == nil {
		var ret int
		return ret
	}
	return *o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardPeriodInfo) GetFrequencyOk() (*int, bool) {
	if o == nil || o.Frequency == nil {
		return nil, false
	}
	return o.Frequency, true
}

// HasFrequency returns a boolean if a field has been set.
func (o *CreditCardPeriodInfo) HasFrequency() bool {
	if o != nil && o.Frequency != nil {
		return true
	}

	return false
}

// SetFrequency gets a reference to the given int and assigns it to the Frequency field.
func (o *CreditCardPeriodInfo) SetFrequency(v int) {
	o.Frequency = &v
}

// GetExecTimes returns the ExecTimes field value if set, zero value otherwise.
func (o *CreditCardPeriodInfo) GetExecTimes() int {
	if o == nil || o.ExecTimes == nil {
		var ret int
		return ret
	}
	return *o.ExecTimes
}

// GetExecTimesOk returns a tuple with the ExecTimes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardPeriodInfo) GetExecTimesOk() (*int, bool) {
	if o == nil || o.ExecTimes == nil {
		return nil, false
	}
	return o.ExecTimes, true
}

// HasExecTimes returns a boolean if a field has been set.
func (o *CreditCardPeriodInfo) HasExecTimes() bool {
	if o != nil && o.ExecTimes != nil {
		return true
	}

	return false
}

// SetExecTimes gets a reference to the given int and assigns it to the ExecTimes field.
func (o *CreditCardPeriodInfo) SetExecTimes(v int) {
	o.ExecTimes = &v
}

// GetPeriodAmount returns the PeriodAmount field value if set, zero value otherwise.
func (o *CreditCardPeriodInfo) GetPeriodAmount() int {
	if o == nil || o.PeriodAmount == nil {
		var ret int
		return ret
	}
	return *o.PeriodAmount
}

// GetPeriodAmountOk returns a tuple with the PeriodAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardPeriodInfo) GetPeriodAmountOk() (*int, bool) {
	if o == nil || o.PeriodAmount == nil {
		return nil, false
	}
	return o.PeriodAmount, true
}

// HasPeriodAmount returns a boolean if a field has been set.
func (o *CreditCardPeriodInfo) HasPeriodAmount() bool {
	if o != nil && o.PeriodAmount != nil {
		return true
	}

	return false
}

// SetPeriodAmount gets a reference to the given int and assigns it to the PeriodAmount field.
func (o *CreditCardPeriodInfo) SetPeriodAmount(v int) {
	o.PeriodAmount = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *CreditCardPeriodInfo) GetAmount() int {
	if o == nil || o.Amount == nil {
		var ret int
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardPeriodInfo) GetAmountOk() (*int, bool) {
	if o == nil || o.Amount == nil {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *CreditCardPeriodInfo) HasAmount() bool {
	if o != nil && o.Amount != nil {
		return true
	}

	return false
}

// SetAmount gets a reference to the given int and assigns it to the Amount field.
func (o *CreditCardPeriodInfo) SetAmount(v int) {
	o.Amount = &v
}

// GetGwsr returns the Gwsr field value if set, zero value otherwise.
func (o *CreditCardPeriodInfo) GetGwsr() int {
	if o == nil || o.Gwsr == nil {
		var ret int
		return ret
	}
	return *o.Gwsr
}

// GetGwsrOk returns a tuple with the Gwsr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardPeriodInfo) GetGwsrOk() (*int, bool) {
	if o == nil || o.Gwsr == nil {
		return nil, false
	}
	return o.Gwsr, true
}

// HasGwsr returns a boolean if a field has been set.
func (o *CreditCardPeriodInfo) HasGwsr() bool {
	if o != nil && o.Gwsr != nil {
		return true
	}

	return false
}

// SetGwsr gets a reference to the given int and assigns it to the Gwsr field.
func (o *CreditCardPeriodInfo) SetGwsr(v int) {
	o.Gwsr = &v
}

// GetProcessDate returns the ProcessDate field value if set, zero value otherwise.
func (o *CreditCardPeriodInfo) GetProcessDate() ECPayDateTime {
	if o == nil || o.ProcessDate == nil {
		var ret ECPayDateTime
		return ret
	}
	return *o.ProcessDate
}

// GetProcessDateOk returns a tuple with the ProcessDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardPeriodInfo) GetProcessDateOk() (*ECPayDateTime, bool) {
	if o == nil || o.ProcessDate == nil {
		return nil, false
	}
	return o.ProcessDate, true
}

// HasProcessDate returns a boolean if a field has been set.
func (o *CreditCardPeriodInfo) HasProcessDate() bool {
	if o != nil && o.ProcessDate != nil {
		return true
	}

	return false
}

// SetProcessDate gets a reference to the given ECPayDateTime and assigns it to the ProcessDate field.
func (o *CreditCardPeriodInfo) SetProcessDate(v ECPayDateTime) {
	o.ProcessDate = &v
}

// GetAuthCode returns the AuthCode field value if set, zero value otherwise.
func (o *CreditCardPeriodInfo) GetAuthCode() string {
	if o == nil || o.AuthCode == nil {
		var ret string
		return ret
	}
	return *o.AuthCode
}

// GetAuthCodeOk returns a tuple with the AuthCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardPeriodInfo) GetAuthCodeOk() (*string, bool) {
	if o == nil || o.AuthCode == nil {
		return nil, false
	}
	return o.AuthCode, true
}

// HasAuthCode returns a boolean if a field has been set.
func (o *CreditCardPeriodInfo) HasAuthCode() bool {
	if o != nil && o.AuthCode != nil {
		return true
	}

	return false
}

// SetAuthCode gets a reference to the given string and assigns it to the AuthCode field.
func (o *CreditCardPeriodInfo) SetAuthCode(v string) {
	o.AuthCode = &v
}

// GetCard4no returns the Card4no field value if set, zero value otherwise.
func (o *CreditCardPeriodInfo) GetCard4no() string {
	if o == nil || o.Card4no == nil {
		var ret string
		return ret
	}
	return *o.Card4no
}

// GetCard4noOk returns a tuple with the Card4no field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardPeriodInfo) GetCard4noOk() (*string, bool) {
	if o == nil || o.Card4no == nil {
		return nil, false
	}
	return o.Card4no, true
}

// HasCard4no returns a boolean if a field has been set.
func (o *CreditCardPeriodInfo) HasCard4no() bool {
	if o != nil && o.Card4no != nil {
		return true
	}

	return false
}

// SetCard4no gets a reference to the given string and assigns it to the Card4no field.
func (o *CreditCardPeriodInfo) SetCard4no(v string) {
	o.Card4no = &v
}

// GetCard6no returns the Card6no field value if set, zero value otherwise.
func (o *CreditCardPeriodInfo) GetCard6no() string {
	if o == nil || o.Card6no == nil {
		var ret string
		return ret
	}
	return *o.Card6no
}

// GetCard6noOk returns a tuple with the Card6no field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardPeriodInfo) GetCard6noOk() (*string, bool) {
	if o == nil || o.Card6no == nil {
		return nil, false
	}
	return o.Card6no, true
}

// HasCard6no returns a boolean if a field has been set.
func (o *CreditCardPeriodInfo) HasCard6no() bool {
	if o != nil && o.Card6no != nil {
		return true
	}

	return false
}

// SetCard6no gets a reference to the given string and assigns it to the Card6no field.
func (o *CreditCardPeriodInfo) SetCard6no(v string) {
	o.Card6no = &v
}

// GetTotalSuccessTimes returns the TotalSuccessTimes field value if set, zero value otherwise.
func (o *CreditCardPeriodInfo) GetTotalSuccessTimes() int {
	if o == nil || o.TotalSuccessTimes == nil {
		var ret int
		return ret
	}
	return *o.TotalSuccessTimes
}

// GetTotalSuccessTimesOk returns a tuple with the TotalSuccessTimes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardPeriodInfo) GetTotalSuccessTimesOk() (*int, bool) {
	if o == nil || o.TotalSuccessTimes == nil {
		return nil, false
	}
	return o.TotalSuccessTimes, true
}

// HasTotalSuccessTimes returns a boolean if a field has been set.
func (o *CreditCardPeriodInfo) HasTotalSuccessTimes() bool {
	if o != nil && o.TotalSuccessTimes != nil {
		return true
	}

	return false
}

// SetTotalSuccessTimes gets a reference to the given int and assigns it to the TotalSuccessTimes field.
func (o *CreditCardPeriodInfo) SetTotalSuccessTimes(v int) {
	o.TotalSuccessTimes = &v
}

// GetTotalSuccessAmount returns the TotalSuccessAmount field value if set, zero value otherwise.
func (o *CreditCardPeriodInfo) GetTotalSuccessAmount() int {
	if o == nil || o.TotalSuccessAmount == nil {
		var ret int
		return ret
	}
	return *o.TotalSuccessAmount
}

// GetTotalSuccessAmountOk returns a tuple with the TotalSuccessAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardPeriodInfo) GetTotalSuccessAmountOk() (*int, bool) {
	if o == nil || o.TotalSuccessAmount == nil {
		return nil, false
	}
	return o.TotalSuccessAmount, true
}

// HasTotalSuccessAmount returns a boolean if a field has been set.
func (o *CreditCardPeriodInfo) HasTotalSuccessAmount() bool {
	if o != nil && o.TotalSuccessAmount != nil {
		return true
	}

	return false
}

// SetTotalSuccessAmount gets a reference to the given int and assigns it to the TotalSuccessAmount field.
func (o *CreditCardPeriodInfo) SetTotalSuccessAmount(v int) {
	o.TotalSuccessAmount = &v
}

// GetExecStatus returns the ExecStatus field value if set, zero value otherwise.
func (o *CreditCardPeriodInfo) GetExecStatus() ExecStatusEnum {
	if o == nil || o.ExecStatus == nil {
		var ret ExecStatusEnum
		return ret
	}
	return *o.ExecStatus
}

// GetExecStatusOk returns a tuple with the ExecStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardPeriodInfo) GetExecStatusOk() (*ExecStatusEnum, bool) {
	if o == nil || o.ExecStatus == nil {
		return nil, false
	}
	return o.ExecStatus, true
}

// HasExecStatus returns a boolean if a field has been set.
func (o *CreditCardPeriodInfo) HasExecStatus() bool {
	if o != nil && o.ExecStatus != nil {
		return true
	}

	return false
}

// SetExecStatus gets a reference to the given ExecStatusEnum and assigns it to the ExecStatus field.
func (o *CreditCardPeriodInfo) SetExecStatus(v ExecStatusEnum) {
	o.ExecStatus = &v
}

// GetExecLogRecord returns the ExecLogRecord field value if set, zero value otherwise.
func (o *CreditCardPeriodInfo) GetExecLogRecord() []ExecLogRecord {
	if o == nil || o.ExecLogRecord == nil {
		var ret []ExecLogRecord
		return ret
	}
	return *o.ExecLogRecord
}

// GetExecLogRecordOk returns a tuple with the ExecLogRecord field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardPeriodInfo) GetExecLogRecordOk() (*[]ExecLogRecord, bool) {
	if o == nil || o.ExecLogRecord == nil {
		return nil, false
	}
	return o.ExecLogRecord, true
}

// HasExecLogRecord returns a boolean if a field has been set.
func (o *CreditCardPeriodInfo) HasExecLogRecord() bool {
	if o != nil && o.ExecLogRecord != nil {
		return true
	}

	return false
}

// SetExecLogRecord gets a reference to the given []ExecLogRecord and assigns it to the ExecLogRecord field.
func (o *CreditCardPeriodInfo) SetExecLogRecord(v []ExecLogRecord) {
	o.ExecLogRecord = &v
}

func (o CreditCardPeriodInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MerchantID != nil {
		toSerialize["MerchantID"] = o.MerchantID
	}
	if o.MerchantTradeNo != nil {
		toSerialize["MerchantTradeNo"] = o.MerchantTradeNo
	}
	if o.TradeNo != nil {
		toSerialize["TradeNo"] = o.TradeNo
	}
	if o.RtnCode != nil {
		toSerialize["RtnCode"] = o.RtnCode
	}
	if o.PeriodType != nil {
		toSerialize["PeriodType"] = o.PeriodType
	}
	if o.Frequency != nil {
		toSerialize["Frequency"] = o.Frequency
	}
	if o.ExecTimes != nil {
		toSerialize["ExecTimes"] = o.ExecTimes
	}
	if o.PeriodAmount != nil {
		toSerialize["PeriodAmount"] = o.PeriodAmount
	}
	if o.Amount != nil {
		toSerialize["amount"] = o.Amount
	}
	if o.Gwsr != nil {
		toSerialize["gwsr"] = o.Gwsr
	}
	if o.ProcessDate != nil {
		toSerialize["process_date"] = o.ProcessDate
	}
	if o.AuthCode != nil {
		toSerialize["auth_code"] = o.AuthCode
	}
	if o.Card4no != nil {
		toSerialize["card4no"] = o.Card4no
	}
	if o.Card6no != nil {
		toSerialize["card6no"] = o.Card6no
	}
	if o.TotalSuccessTimes != nil {
		toSerialize["TotalSuccessTimes"] = o.TotalSuccessTimes
	}
	if o.TotalSuccessAmount != nil {
		toSerialize["TotalSuccessAmount"] = o.TotalSuccessAmount
	}
	if o.ExecStatus != nil {
		toSerialize["ExecStatus"] = o.ExecStatus
	}
	if o.ExecLogRecord != nil {
		toSerialize["ExecLogRecord"] = o.ExecLogRecord
	}
	return json.Marshal(toSerialize)
}

type NullableCreditCardPeriodInfo struct {
	value *CreditCardPeriodInfo
	isSet bool
}

func (v NullableCreditCardPeriodInfo) Get() *CreditCardPeriodInfo {
	return v.value
}

func (v *NullableCreditCardPeriodInfo) Set(val *CreditCardPeriodInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCreditCardPeriodInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCreditCardPeriodInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreditCardPeriodInfo(val *CreditCardPeriodInfo) *NullableCreditCardPeriodInfo {
	return &NullableCreditCardPeriodInfo{value: val, isSet: true}
}

func (v NullableCreditCardPeriodInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreditCardPeriodInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
