/*
 * ECPay API
 *
 * 綠界金流 API 定義文件
 *
 * API version: 0.0.3
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package base

import (
	"encoding/json"
)

// AioCheckOutRequestAllOf struct for AioCheckOutRequestAllOf
type AioCheckOutRequestAllOf struct {
	// 特店編號(由綠界提供)
	MerchantID string `json:"MerchantID"`
	// **特店交易編號(由特店提供)** 特店交易編號均為唯一值，不可重複使用。 英數字大小寫混合 如何避免訂單編號重複請參考 FAQ 如有使用 `PlatformID` ，平台商底下所有商家之訂單編號亦不可重複。
	MerchantTradeNo string `json:"MerchantTradeNo"`
	// **特店旗下店舖代號** 提供特店填入分店代號使用，僅可用英數字大小寫混合。
	StoreID *string `json:"StoreID,omitempty"`
	// **特店交易時間** 格式為 `yyyy/MM/dd HH:mm:ss`
	MerchantTradeDate ECPayDateTime `json:"MerchantTradeDate"`
	// **交易類型** 請固定填入 `aio`
	PaymentType string `json:"PaymentType"`
	// **交易金額** 請帶整數，不可有小數點。 僅限新台幣。 各付款金額的限制，請參考 <https://www.ecpay.com.tw/CascadeFAQ/CascadeFAQ_Qa?nID=3605>
	TotalAmount int32 `json:"TotalAmount"`
	// **交易描述** 傳送到綠界前，請將參數值先做 UrlEncode。
	TradeDesc string `json:"TradeDesc"`
	// **商品名稱** 1. 如果商品名稱有多筆，需在金流選擇頁一行一行顯示商品名稱的話，商品名稱請以符號#分隔。 2. 商品名稱字數限制為中英數 400 字內，超過此限制系統將自動截斷。
	ItemName string `json:"ItemName"`
	// **付款完成通知回傳網址** 當消費者付款完成後，綠界會將付款結果參數以幕後(Server POST)回傳到該網址。 詳細說明請參考付款結果通知 注意事項： 1. 請勿設定與 Client 端接收付款結果網址 OrderResultURL 相同位置，避免程式判斷錯誤。 2. 請在收到 Server 端付款結果通知後，請正確回應 1|OK 給綠界。
	ReturnURL string `json:"ReturnURL"`
	// **選擇預設付款方式** 綠界提供下列付款方式，請於建立訂單時傳送過來: - `Credit`: 信用卡及銀聯卡(需申請開通) - `WebATM`: 網路 ATM - `ATM`: 自動櫃員機 - `CVS`: 超商代碼 - `BARCODE`: 超商條碼 - `ALL`: 不指定付款方式，由綠界顯示付款方式選擇頁面。  注意事項： 1.若為手機版時不支援下列付款方式:   - WebATM:網路 ATM  2.如需要不透過綠界畫面取得 `ATM`、`CVS`、`BARCODE` 的繳費代碼，請參考 FAQ。
	ChoosePayment string `json:"ChoosePayment"`
	// **檢查碼** 請參考附錄檢查碼機制與產生檢查碼範例程式
	CheckMacValue string `json:"CheckMacValue"`
	// **Client端返回特店的按鈕連結** 消費者點選此按鈕後，會將頁面導回到此設定的網址 注意事項： 導回時不會帶付款結果到此網址，只是將頁面導回而已。 設定此參數，綠界會在付款完成或取號完成頁面上顯示[返回商店]的按鈕。 設定此參數，發生簡訊 OTP 驗證失敗時，頁面上會顯示[返回商店]的按鈕。 若未設定此參數，則綠界付款完成頁或取號完成頁面，不會顯示[返回商店]的按鈕。 若導回網址未使用 https 時，部份瀏覽器可能會出現警告訊息。
	ClientBackURL *string `json:"ClientBackURL,omitempty"`
	// **商品銷售網址**
	ItemURL *string `json:"ItemURL,omitempty"`
	// **備註欄位**
	Remark *string `json:"Remark,omitempty"`
	// **付款子項目** 若設定此參數，建立訂單將轉導至綠界訂單成立頁，依設定的付款方式及付款子項目帶入訂單，無法選擇其他付款子項目。 請參考付款方式一覽表
	ChooseSubPayment *string `json:"ChooseSubPayment,omitempty"`
	// **Client端回傳付款結果網址** 當消費者付款完成後，綠界會將付款結果參數以幕前(Client POST)回傳到該網址。 詳細說明請參考付款結果通知 注意事項： 1. 若與[ClientBackURL]同時設定，將會以此參數為主。 2. 銀聯卡及非即時交易(ATM、CVS、BARCODE)不支援此參數。
	OrderResultURL *string `json:"OrderResultURL,omitempty"`
	// **是否需要額外的付款資訊** 額外的付款資訊： 若不回傳額外的付款資訊時，參數值請傳：`Ｎ`； 若要回傳額外的付款資訊時，參數值請傳：`Ｙ`，付款完成後綠界會以 Server POST 方式回傳額外付款資訊。 注意事項： 回傳額外付款資訊參數請參考-額外回傳的參數
	NeedExtraPaidInfo *string `json:"NeedExtraPaidInfo,omitempty"`
	// **裝置來源** 請帶空值，由系統自動判定。
	DeviceSource *string `json:"DeviceSource,omitempty"`
	// **隱藏付款** 當付款方式 `ChoosePayment` 為 `ALL` 時，可隱藏不需要的付款方式，多筆請以井號分隔(#)。 可用的參數值： - `Credit`: 信用卡 - `WebATM`: 網路 ATM - `ATM`: 自動櫃員機 - `CVS`: 超商代碼 - `BARCODE`: 超商條碼
	IgnorePayment *string `json:"IgnorePayment,omitempty"`
	// **特約合作平台商代號(由綠界提供)** 為專案合作的平台商使用。 一般特店或平台商本身介接，則參數請帶放空值。 若為專案合作平台商的特店使用時，則參數請帶平台商所綁的特店編號 `MerchantID`。
	PlatformID *string `json:"PlatformID,omitempty"`
	// **電子發票開立註記** 此參數為付款完成後同時開立電子發票。 若要使用時，該參數須設定為「Y」，同時還要設定「電子發票介接相關參數」 注意事項： 正式環境欲使用電子發票功能，須與綠界申請開通，若未開通請致電客服中心 `(02) 2655-1775`。
	InvoiceMark *string `json:"InvoiceMark,omitempty"`
	// **自訂名稱欄位1** 提供合作廠商使用記錄用客製化使用欄位 注意事項： 特殊符號只支援 `,.#()$[];%{}:/?&@<>!`
	CustomField1 *string `json:"CustomField1,omitempty"`
	// **自訂名稱欄位2** 提供合作廠商使用記錄用客製化使用欄位 注意事項： 特殊符號只支援 `,.#()$[];%{}:/?&@<>!`
	CustomField2 *string `json:"CustomField2,omitempty"`
	// **自訂名稱欄位3** 提供合作廠商使用記錄用客製化使用欄位 注意事項： 特殊符號只支援 `,.#()$[];%{}:/?&@<>!`
	CustomField3 *string `json:"CustomField3,omitempty"`
	// **自訂名稱欄位4** 提供合作廠商使用記錄用客製化使用欄位 注意事項： 特殊符號只支援 `,.#()$[];%{}:/?&@<>!`
	CustomField4 *string `json:"CustomField4,omitempty"`
	// **CheckMacValue加密類型** 請固定填入 `1`，使用 SHA256 加密。
	EncryptType int32 `json:"EncryptType"`
	// **語系設定** 預設語系為中文，若要變更語系參數值請帶： - 英語：`ENG` - 韓語：`KOR` - 日語：`JPN` - 簡體中文：`CHI`
	Language *string `json:"Language,omitempty"`
}

// NewAioCheckOutRequestAllOf instantiates a new AioCheckOutRequestAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAioCheckOutRequestAllOf(merchantID string, merchantTradeNo string, merchantTradeDate ECPayDateTime, paymentType string, totalAmount int32, tradeDesc string, itemName string, returnURL string, choosePayment string, checkMacValue string, encryptType int32) *AioCheckOutRequestAllOf {
	this := AioCheckOutRequestAllOf{}
	this.MerchantID = merchantID
	this.MerchantTradeNo = merchantTradeNo
	this.MerchantTradeDate = merchantTradeDate
	this.PaymentType = paymentType
	this.TotalAmount = totalAmount
	this.TradeDesc = tradeDesc
	this.ItemName = itemName
	this.ReturnURL = returnURL
	this.ChoosePayment = choosePayment
	this.CheckMacValue = checkMacValue
	var needExtraPaidInfo string = "N"
	this.NeedExtraPaidInfo = &needExtraPaidInfo
	this.EncryptType = encryptType
	return &this
}

// NewAioCheckOutRequestAllOfWithDefaults instantiates a new AioCheckOutRequestAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAioCheckOutRequestAllOfWithDefaults() *AioCheckOutRequestAllOf {
	this := AioCheckOutRequestAllOf{}
	var paymentType string = "aio"
	this.PaymentType = paymentType
	var needExtraPaidInfo string = "N"
	this.NeedExtraPaidInfo = &needExtraPaidInfo
	var encryptType int32 = 1
	this.EncryptType = encryptType
	return &this
}

// GetMerchantID returns the MerchantID field value
func (o *AioCheckOutRequestAllOf) GetMerchantID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantID
}

// GetMerchantIDOk returns a tuple with the MerchantID field value
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequestAllOf) GetMerchantIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MerchantID, true
}

// SetMerchantID sets field value
func (o *AioCheckOutRequestAllOf) SetMerchantID(v string) {
	o.MerchantID = v
}

// GetMerchantTradeNo returns the MerchantTradeNo field value
func (o *AioCheckOutRequestAllOf) GetMerchantTradeNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantTradeNo
}

// GetMerchantTradeNoOk returns a tuple with the MerchantTradeNo field value
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequestAllOf) GetMerchantTradeNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MerchantTradeNo, true
}

// SetMerchantTradeNo sets field value
func (o *AioCheckOutRequestAllOf) SetMerchantTradeNo(v string) {
	o.MerchantTradeNo = v
}

// GetStoreID returns the StoreID field value if set, zero value otherwise.
func (o *AioCheckOutRequestAllOf) GetStoreID() string {
	if o == nil || o.StoreID == nil {
		var ret string
		return ret
	}
	return *o.StoreID
}

// GetStoreIDOk returns a tuple with the StoreID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequestAllOf) GetStoreIDOk() (*string, bool) {
	if o == nil || o.StoreID == nil {
		return nil, false
	}
	return o.StoreID, true
}

// HasStoreID returns a boolean if a field has been set.
func (o *AioCheckOutRequestAllOf) HasStoreID() bool {
	if o != nil && o.StoreID != nil {
		return true
	}

	return false
}

// SetStoreID gets a reference to the given string and assigns it to the StoreID field.
func (o *AioCheckOutRequestAllOf) SetStoreID(v string) {
	o.StoreID = &v
}

// GetMerchantTradeDate returns the MerchantTradeDate field value
func (o *AioCheckOutRequestAllOf) GetMerchantTradeDate() ECPayDateTime {
	if o == nil {
		var ret ECPayDateTime
		return ret
	}

	return o.MerchantTradeDate
}

// GetMerchantTradeDateOk returns a tuple with the MerchantTradeDate field value
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequestAllOf) GetMerchantTradeDateOk() (*ECPayDateTime, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MerchantTradeDate, true
}

// SetMerchantTradeDate sets field value
func (o *AioCheckOutRequestAllOf) SetMerchantTradeDate(v ECPayDateTime) {
	o.MerchantTradeDate = v
}

// GetPaymentType returns the PaymentType field value
func (o *AioCheckOutRequestAllOf) GetPaymentType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PaymentType
}

// GetPaymentTypeOk returns a tuple with the PaymentType field value
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequestAllOf) GetPaymentTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentType, true
}

// SetPaymentType sets field value
func (o *AioCheckOutRequestAllOf) SetPaymentType(v string) {
	o.PaymentType = v
}

// GetTotalAmount returns the TotalAmount field value
func (o *AioCheckOutRequestAllOf) GetTotalAmount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalAmount
}

// GetTotalAmountOk returns a tuple with the TotalAmount field value
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequestAllOf) GetTotalAmountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalAmount, true
}

// SetTotalAmount sets field value
func (o *AioCheckOutRequestAllOf) SetTotalAmount(v int32) {
	o.TotalAmount = v
}

// GetTradeDesc returns the TradeDesc field value
func (o *AioCheckOutRequestAllOf) GetTradeDesc() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TradeDesc
}

// GetTradeDescOk returns a tuple with the TradeDesc field value
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequestAllOf) GetTradeDescOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TradeDesc, true
}

// SetTradeDesc sets field value
func (o *AioCheckOutRequestAllOf) SetTradeDesc(v string) {
	o.TradeDesc = v
}

// GetItemName returns the ItemName field value
func (o *AioCheckOutRequestAllOf) GetItemName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ItemName
}

// GetItemNameOk returns a tuple with the ItemName field value
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequestAllOf) GetItemNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ItemName, true
}

// SetItemName sets field value
func (o *AioCheckOutRequestAllOf) SetItemName(v string) {
	o.ItemName = v
}

// GetReturnURL returns the ReturnURL field value
func (o *AioCheckOutRequestAllOf) GetReturnURL() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReturnURL
}

// GetReturnURLOk returns a tuple with the ReturnURL field value
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequestAllOf) GetReturnURLOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReturnURL, true
}

// SetReturnURL sets field value
func (o *AioCheckOutRequestAllOf) SetReturnURL(v string) {
	o.ReturnURL = v
}

// GetChoosePayment returns the ChoosePayment field value
func (o *AioCheckOutRequestAllOf) GetChoosePayment() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChoosePayment
}

// GetChoosePaymentOk returns a tuple with the ChoosePayment field value
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequestAllOf) GetChoosePaymentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChoosePayment, true
}

// SetChoosePayment sets field value
func (o *AioCheckOutRequestAllOf) SetChoosePayment(v string) {
	o.ChoosePayment = v
}

// GetCheckMacValue returns the CheckMacValue field value
func (o *AioCheckOutRequestAllOf) GetCheckMacValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CheckMacValue
}

// GetCheckMacValueOk returns a tuple with the CheckMacValue field value
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequestAllOf) GetCheckMacValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CheckMacValue, true
}

// SetCheckMacValue sets field value
func (o *AioCheckOutRequestAllOf) SetCheckMacValue(v string) {
	o.CheckMacValue = v
}

// GetClientBackURL returns the ClientBackURL field value if set, zero value otherwise.
func (o *AioCheckOutRequestAllOf) GetClientBackURL() string {
	if o == nil || o.ClientBackURL == nil {
		var ret string
		return ret
	}
	return *o.ClientBackURL
}

// GetClientBackURLOk returns a tuple with the ClientBackURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequestAllOf) GetClientBackURLOk() (*string, bool) {
	if o == nil || o.ClientBackURL == nil {
		return nil, false
	}
	return o.ClientBackURL, true
}

// HasClientBackURL returns a boolean if a field has been set.
func (o *AioCheckOutRequestAllOf) HasClientBackURL() bool {
	if o != nil && o.ClientBackURL != nil {
		return true
	}

	return false
}

// SetClientBackURL gets a reference to the given string and assigns it to the ClientBackURL field.
func (o *AioCheckOutRequestAllOf) SetClientBackURL(v string) {
	o.ClientBackURL = &v
}

// GetItemURL returns the ItemURL field value if set, zero value otherwise.
func (o *AioCheckOutRequestAllOf) GetItemURL() string {
	if o == nil || o.ItemURL == nil {
		var ret string
		return ret
	}
	return *o.ItemURL
}

// GetItemURLOk returns a tuple with the ItemURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequestAllOf) GetItemURLOk() (*string, bool) {
	if o == nil || o.ItemURL == nil {
		return nil, false
	}
	return o.ItemURL, true
}

// HasItemURL returns a boolean if a field has been set.
func (o *AioCheckOutRequestAllOf) HasItemURL() bool {
	if o != nil && o.ItemURL != nil {
		return true
	}

	return false
}

// SetItemURL gets a reference to the given string and assigns it to the ItemURL field.
func (o *AioCheckOutRequestAllOf) SetItemURL(v string) {
	o.ItemURL = &v
}

// GetRemark returns the Remark field value if set, zero value otherwise.
func (o *AioCheckOutRequestAllOf) GetRemark() string {
	if o == nil || o.Remark == nil {
		var ret string
		return ret
	}
	return *o.Remark
}

// GetRemarkOk returns a tuple with the Remark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequestAllOf) GetRemarkOk() (*string, bool) {
	if o == nil || o.Remark == nil {
		return nil, false
	}
	return o.Remark, true
}

// HasRemark returns a boolean if a field has been set.
func (o *AioCheckOutRequestAllOf) HasRemark() bool {
	if o != nil && o.Remark != nil {
		return true
	}

	return false
}

// SetRemark gets a reference to the given string and assigns it to the Remark field.
func (o *AioCheckOutRequestAllOf) SetRemark(v string) {
	o.Remark = &v
}

// GetChooseSubPayment returns the ChooseSubPayment field value if set, zero value otherwise.
func (o *AioCheckOutRequestAllOf) GetChooseSubPayment() string {
	if o == nil || o.ChooseSubPayment == nil {
		var ret string
		return ret
	}
	return *o.ChooseSubPayment
}

// GetChooseSubPaymentOk returns a tuple with the ChooseSubPayment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequestAllOf) GetChooseSubPaymentOk() (*string, bool) {
	if o == nil || o.ChooseSubPayment == nil {
		return nil, false
	}
	return o.ChooseSubPayment, true
}

// HasChooseSubPayment returns a boolean if a field has been set.
func (o *AioCheckOutRequestAllOf) HasChooseSubPayment() bool {
	if o != nil && o.ChooseSubPayment != nil {
		return true
	}

	return false
}

// SetChooseSubPayment gets a reference to the given string and assigns it to the ChooseSubPayment field.
func (o *AioCheckOutRequestAllOf) SetChooseSubPayment(v string) {
	o.ChooseSubPayment = &v
}

// GetOrderResultURL returns the OrderResultURL field value if set, zero value otherwise.
func (o *AioCheckOutRequestAllOf) GetOrderResultURL() string {
	if o == nil || o.OrderResultURL == nil {
		var ret string
		return ret
	}
	return *o.OrderResultURL
}

// GetOrderResultURLOk returns a tuple with the OrderResultURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequestAllOf) GetOrderResultURLOk() (*string, bool) {
	if o == nil || o.OrderResultURL == nil {
		return nil, false
	}
	return o.OrderResultURL, true
}

// HasOrderResultURL returns a boolean if a field has been set.
func (o *AioCheckOutRequestAllOf) HasOrderResultURL() bool {
	if o != nil && o.OrderResultURL != nil {
		return true
	}

	return false
}

// SetOrderResultURL gets a reference to the given string and assigns it to the OrderResultURL field.
func (o *AioCheckOutRequestAllOf) SetOrderResultURL(v string) {
	o.OrderResultURL = &v
}

// GetNeedExtraPaidInfo returns the NeedExtraPaidInfo field value if set, zero value otherwise.
func (o *AioCheckOutRequestAllOf) GetNeedExtraPaidInfo() string {
	if o == nil || o.NeedExtraPaidInfo == nil {
		var ret string
		return ret
	}
	return *o.NeedExtraPaidInfo
}

// GetNeedExtraPaidInfoOk returns a tuple with the NeedExtraPaidInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequestAllOf) GetNeedExtraPaidInfoOk() (*string, bool) {
	if o == nil || o.NeedExtraPaidInfo == nil {
		return nil, false
	}
	return o.NeedExtraPaidInfo, true
}

// HasNeedExtraPaidInfo returns a boolean if a field has been set.
func (o *AioCheckOutRequestAllOf) HasNeedExtraPaidInfo() bool {
	if o != nil && o.NeedExtraPaidInfo != nil {
		return true
	}

	return false
}

// SetNeedExtraPaidInfo gets a reference to the given string and assigns it to the NeedExtraPaidInfo field.
func (o *AioCheckOutRequestAllOf) SetNeedExtraPaidInfo(v string) {
	o.NeedExtraPaidInfo = &v
}

// GetDeviceSource returns the DeviceSource field value if set, zero value otherwise.
func (o *AioCheckOutRequestAllOf) GetDeviceSource() string {
	if o == nil || o.DeviceSource == nil {
		var ret string
		return ret
	}
	return *o.DeviceSource
}

// GetDeviceSourceOk returns a tuple with the DeviceSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequestAllOf) GetDeviceSourceOk() (*string, bool) {
	if o == nil || o.DeviceSource == nil {
		return nil, false
	}
	return o.DeviceSource, true
}

// HasDeviceSource returns a boolean if a field has been set.
func (o *AioCheckOutRequestAllOf) HasDeviceSource() bool {
	if o != nil && o.DeviceSource != nil {
		return true
	}

	return false
}

// SetDeviceSource gets a reference to the given string and assigns it to the DeviceSource field.
func (o *AioCheckOutRequestAllOf) SetDeviceSource(v string) {
	o.DeviceSource = &v
}

// GetIgnorePayment returns the IgnorePayment field value if set, zero value otherwise.
func (o *AioCheckOutRequestAllOf) GetIgnorePayment() string {
	if o == nil || o.IgnorePayment == nil {
		var ret string
		return ret
	}
	return *o.IgnorePayment
}

// GetIgnorePaymentOk returns a tuple with the IgnorePayment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequestAllOf) GetIgnorePaymentOk() (*string, bool) {
	if o == nil || o.IgnorePayment == nil {
		return nil, false
	}
	return o.IgnorePayment, true
}

// HasIgnorePayment returns a boolean if a field has been set.
func (o *AioCheckOutRequestAllOf) HasIgnorePayment() bool {
	if o != nil && o.IgnorePayment != nil {
		return true
	}

	return false
}

// SetIgnorePayment gets a reference to the given string and assigns it to the IgnorePayment field.
func (o *AioCheckOutRequestAllOf) SetIgnorePayment(v string) {
	o.IgnorePayment = &v
}

// GetPlatformID returns the PlatformID field value if set, zero value otherwise.
func (o *AioCheckOutRequestAllOf) GetPlatformID() string {
	if o == nil || o.PlatformID == nil {
		var ret string
		return ret
	}
	return *o.PlatformID
}

// GetPlatformIDOk returns a tuple with the PlatformID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequestAllOf) GetPlatformIDOk() (*string, bool) {
	if o == nil || o.PlatformID == nil {
		return nil, false
	}
	return o.PlatformID, true
}

// HasPlatformID returns a boolean if a field has been set.
func (o *AioCheckOutRequestAllOf) HasPlatformID() bool {
	if o != nil && o.PlatformID != nil {
		return true
	}

	return false
}

// SetPlatformID gets a reference to the given string and assigns it to the PlatformID field.
func (o *AioCheckOutRequestAllOf) SetPlatformID(v string) {
	o.PlatformID = &v
}

// GetInvoiceMark returns the InvoiceMark field value if set, zero value otherwise.
func (o *AioCheckOutRequestAllOf) GetInvoiceMark() string {
	if o == nil || o.InvoiceMark == nil {
		var ret string
		return ret
	}
	return *o.InvoiceMark
}

// GetInvoiceMarkOk returns a tuple with the InvoiceMark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequestAllOf) GetInvoiceMarkOk() (*string, bool) {
	if o == nil || o.InvoiceMark == nil {
		return nil, false
	}
	return o.InvoiceMark, true
}

// HasInvoiceMark returns a boolean if a field has been set.
func (o *AioCheckOutRequestAllOf) HasInvoiceMark() bool {
	if o != nil && o.InvoiceMark != nil {
		return true
	}

	return false
}

// SetInvoiceMark gets a reference to the given string and assigns it to the InvoiceMark field.
func (o *AioCheckOutRequestAllOf) SetInvoiceMark(v string) {
	o.InvoiceMark = &v
}

// GetCustomField1 returns the CustomField1 field value if set, zero value otherwise.
func (o *AioCheckOutRequestAllOf) GetCustomField1() string {
	if o == nil || o.CustomField1 == nil {
		var ret string
		return ret
	}
	return *o.CustomField1
}

// GetCustomField1Ok returns a tuple with the CustomField1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequestAllOf) GetCustomField1Ok() (*string, bool) {
	if o == nil || o.CustomField1 == nil {
		return nil, false
	}
	return o.CustomField1, true
}

// HasCustomField1 returns a boolean if a field has been set.
func (o *AioCheckOutRequestAllOf) HasCustomField1() bool {
	if o != nil && o.CustomField1 != nil {
		return true
	}

	return false
}

// SetCustomField1 gets a reference to the given string and assigns it to the CustomField1 field.
func (o *AioCheckOutRequestAllOf) SetCustomField1(v string) {
	o.CustomField1 = &v
}

// GetCustomField2 returns the CustomField2 field value if set, zero value otherwise.
func (o *AioCheckOutRequestAllOf) GetCustomField2() string {
	if o == nil || o.CustomField2 == nil {
		var ret string
		return ret
	}
	return *o.CustomField2
}

// GetCustomField2Ok returns a tuple with the CustomField2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequestAllOf) GetCustomField2Ok() (*string, bool) {
	if o == nil || o.CustomField2 == nil {
		return nil, false
	}
	return o.CustomField2, true
}

// HasCustomField2 returns a boolean if a field has been set.
func (o *AioCheckOutRequestAllOf) HasCustomField2() bool {
	if o != nil && o.CustomField2 != nil {
		return true
	}

	return false
}

// SetCustomField2 gets a reference to the given string and assigns it to the CustomField2 field.
func (o *AioCheckOutRequestAllOf) SetCustomField2(v string) {
	o.CustomField2 = &v
}

// GetCustomField3 returns the CustomField3 field value if set, zero value otherwise.
func (o *AioCheckOutRequestAllOf) GetCustomField3() string {
	if o == nil || o.CustomField3 == nil {
		var ret string
		return ret
	}
	return *o.CustomField3
}

// GetCustomField3Ok returns a tuple with the CustomField3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequestAllOf) GetCustomField3Ok() (*string, bool) {
	if o == nil || o.CustomField3 == nil {
		return nil, false
	}
	return o.CustomField3, true
}

// HasCustomField3 returns a boolean if a field has been set.
func (o *AioCheckOutRequestAllOf) HasCustomField3() bool {
	if o != nil && o.CustomField3 != nil {
		return true
	}

	return false
}

// SetCustomField3 gets a reference to the given string and assigns it to the CustomField3 field.
func (o *AioCheckOutRequestAllOf) SetCustomField3(v string) {
	o.CustomField3 = &v
}

// GetCustomField4 returns the CustomField4 field value if set, zero value otherwise.
func (o *AioCheckOutRequestAllOf) GetCustomField4() string {
	if o == nil || o.CustomField4 == nil {
		var ret string
		return ret
	}
	return *o.CustomField4
}

// GetCustomField4Ok returns a tuple with the CustomField4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequestAllOf) GetCustomField4Ok() (*string, bool) {
	if o == nil || o.CustomField4 == nil {
		return nil, false
	}
	return o.CustomField4, true
}

// HasCustomField4 returns a boolean if a field has been set.
func (o *AioCheckOutRequestAllOf) HasCustomField4() bool {
	if o != nil && o.CustomField4 != nil {
		return true
	}

	return false
}

// SetCustomField4 gets a reference to the given string and assigns it to the CustomField4 field.
func (o *AioCheckOutRequestAllOf) SetCustomField4(v string) {
	o.CustomField4 = &v
}

// GetEncryptType returns the EncryptType field value
func (o *AioCheckOutRequestAllOf) GetEncryptType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.EncryptType
}

// GetEncryptTypeOk returns a tuple with the EncryptType field value
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequestAllOf) GetEncryptTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EncryptType, true
}

// SetEncryptType sets field value
func (o *AioCheckOutRequestAllOf) SetEncryptType(v int32) {
	o.EncryptType = v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *AioCheckOutRequestAllOf) GetLanguage() string {
	if o == nil || o.Language == nil {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequestAllOf) GetLanguageOk() (*string, bool) {
	if o == nil || o.Language == nil {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *AioCheckOutRequestAllOf) HasLanguage() bool {
	if o != nil && o.Language != nil {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *AioCheckOutRequestAllOf) SetLanguage(v string) {
	o.Language = &v
}

func (o AioCheckOutRequestAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["MerchantID"] = o.MerchantID
	}
	if true {
		toSerialize["MerchantTradeNo"] = o.MerchantTradeNo
	}
	if o.StoreID != nil {
		toSerialize["StoreID"] = o.StoreID
	}
	if true {
		toSerialize["MerchantTradeDate"] = o.MerchantTradeDate
	}
	if true {
		toSerialize["PaymentType"] = o.PaymentType
	}
	if true {
		toSerialize["TotalAmount"] = o.TotalAmount
	}
	if true {
		toSerialize["TradeDesc"] = o.TradeDesc
	}
	if true {
		toSerialize["ItemName"] = o.ItemName
	}
	if true {
		toSerialize["ReturnURL"] = o.ReturnURL
	}
	if true {
		toSerialize["ChoosePayment"] = o.ChoosePayment
	}
	if true {
		toSerialize["CheckMacValue"] = o.CheckMacValue
	}
	if o.ClientBackURL != nil {
		toSerialize["ClientBackURL"] = o.ClientBackURL
	}
	if o.ItemURL != nil {
		toSerialize["ItemURL"] = o.ItemURL
	}
	if o.Remark != nil {
		toSerialize["Remark"] = o.Remark
	}
	if o.ChooseSubPayment != nil {
		toSerialize["ChooseSubPayment"] = o.ChooseSubPayment
	}
	if o.OrderResultURL != nil {
		toSerialize["OrderResultURL"] = o.OrderResultURL
	}
	if o.NeedExtraPaidInfo != nil {
		toSerialize["NeedExtraPaidInfo"] = o.NeedExtraPaidInfo
	}
	if o.DeviceSource != nil {
		toSerialize["DeviceSource"] = o.DeviceSource
	}
	if o.IgnorePayment != nil {
		toSerialize["IgnorePayment"] = o.IgnorePayment
	}
	if o.PlatformID != nil {
		toSerialize["PlatformID"] = o.PlatformID
	}
	if o.InvoiceMark != nil {
		toSerialize["InvoiceMark"] = o.InvoiceMark
	}
	if o.CustomField1 != nil {
		toSerialize["CustomField1"] = o.CustomField1
	}
	if o.CustomField2 != nil {
		toSerialize["CustomField2"] = o.CustomField2
	}
	if o.CustomField3 != nil {
		toSerialize["CustomField3"] = o.CustomField3
	}
	if o.CustomField4 != nil {
		toSerialize["CustomField4"] = o.CustomField4
	}
	if true {
		toSerialize["EncryptType"] = o.EncryptType
	}
	if o.Language != nil {
		toSerialize["Language"] = o.Language
	}
	return json.Marshal(toSerialize)
}

type NullableAioCheckOutRequestAllOf struct {
	value *AioCheckOutRequestAllOf
	isSet bool
}

func (v NullableAioCheckOutRequestAllOf) Get() *AioCheckOutRequestAllOf {
	return v.value
}

func (v *NullableAioCheckOutRequestAllOf) Set(val *AioCheckOutRequestAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAioCheckOutRequestAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAioCheckOutRequestAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAioCheckOutRequestAllOf(val *AioCheckOutRequestAllOf) *NullableAioCheckOutRequestAllOf {
	return &NullableAioCheckOutRequestAllOf{value: val, isSet: true}
}

func (v NullableAioCheckOutRequestAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAioCheckOutRequestAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
