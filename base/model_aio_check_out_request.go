/*
 * ECPay API
 *
 * 綠界金流 API 定義文件
 *
 * API version: 0.0.8
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package base

import (
	"encoding/json"
)

// AioCheckOutRequest struct for AioCheckOutRequest
type AioCheckOutRequest struct {
	// **特店編號(由綠界提供)**
	MerchantID string `json:"MerchantID"`
	// **特店交易編號(由特店提供)**   特店交易編號均為唯一值，不可重複使用。   英數字大小寫混合   如何避免訂單編號重複請參考 FAQ   如有使用 `PlatformID` ，平台商底下所有商家之訂單編號亦不可重複。
	MerchantTradeNo string `json:"MerchantTradeNo"`
	// **特店旗下店舖代號** 提供特店填入分店代號使用，僅可用英數字大小寫混合。
	StoreID *string `json:"StoreID,omitempty"`
	// **特店交易時間** 格式為 `yyyy/MM/dd HH:mm:ss`
	MerchantTradeDate ECPayDateTime           `json:"MerchantTradeDate"`
	PaymentType       AioCheckPaymentTypeEnum `json:"PaymentType"`
	// **交易金額**   請帶整數，不可有小數點。   僅限新台幣。   各付款金額的限制，請參考 <https://www.ecpay.com.tw/CascadeFAQ/CascadeFAQ_Qa?nID=3605>
	TotalAmount int32 `json:"TotalAmount"`
	// **交易描述** 傳送到綠界前，請將參數值先做 UrlEncode。
	TradeDesc string `json:"TradeDesc"`
	// **商品名稱**   1. 如果商品名稱有多筆，需在金流選擇頁一行一行顯示商品名稱的話，商品名稱請以符號#分隔。   2. 商品名稱字數限制為中英數 400 字內，超過此限制系統將自動截斷。
	ItemName string `json:"ItemName"`
	// **付款完成通知回傳網址**   當消費者付款完成後，綠界會將付款結果參數以幕後(Server POST)回傳到該網址。   詳細說明請參考付款結果通知   注意事項：    1. 請勿設定與 Client 端接收付款結果網址 OrderResultURL 相同位置，避免程式判斷錯誤。   2. 請在收到 Server 端付款結果通知後，請正確回應 1|OK 給綠界。
	ReturnURL     string            `json:"ReturnURL"`
	ChoosePayment ChoosePaymentEnum `json:"ChoosePayment"`
	// **檢查碼** 請參考附錄檢查碼機制與產生檢查碼範例程式
	CheckMacValue string `json:"CheckMacValue"`
	// **Client端返回特店的按鈕連結**   消費者點選此按鈕後，會將頁面導回到此設定的網址   注意事項：   導回時不會帶付款結果到此網址，只是將頁面導回而已。   設定此參數，綠界會在付款完成或取號完成頁面上顯示[返回商店]的按鈕。   設定此參數，發生簡訊 OTP 驗證失敗時，頁面上會顯示[返回商店]的按鈕。   若未設定此參數，則綠界付款完成頁或取號完成頁面，不會顯示[返回商店]的按鈕。   若導回網址未使用 https 時，部份瀏覽器可能會出現警告訊息。
	ClientBackURL *string `json:"ClientBackURL,omitempty"`
	// **商品銷售網址**
	ItemURL *string `json:"ItemURL,omitempty"`
	// **備註欄位**
	Remark *string `json:"Remark,omitempty"`
	// **付款子項目**   若設定此參數，建立訂單將轉導至綠界訂單成立頁，依設定的付款方式及付款子項目帶入訂單，無法選擇其他付款子項目。   請參考付款方式一覽表
	ChooseSubPayment *string `json:"ChooseSubPayment,omitempty"`
	// **Client端回傳付款結果網址**     當消費者付款完成後，綠界會將付款結果參數以幕前(Client POST)回傳到該網址。   詳細說明請參考付款結果通知   注意事項：   1. 若與[ClientBackURL]同時設定，將會以此參數為主。   2. 銀聯卡及非即時交易(ATM、CVS、BARCODE)不支援此參數。
	OrderResultURL    *string                `json:"OrderResultURL,omitempty"`
	NeedExtraPaidInfo *NeedExtraPaidInfoEnum `json:"NeedExtraPaidInfo,omitempty"`
	// **裝置來源** 請帶空值，由系統自動判定。
	DeviceSource *string `json:"DeviceSource,omitempty"`
	// **隱藏付款**   當付款方式 `ChoosePayment` 為 `ALL` 時，可隱藏不需要的付款方式，多筆請以井號分隔(#)。   可用的參數值：   - `Credit`: 信用卡   - `WebATM`: 網路 ATM   - `ATM`: 自動櫃員機   - `CVS`: 超商代碼   - `BARCODE`: 超商條碼
	IgnorePayment *string `json:"IgnorePayment,omitempty"`
	// **特約合作平台商代號(由綠界提供)**   為專案合作的平台商使用。   一般特店或平台商本身介接，則參數請帶放空值。   若為專案合作平台商的特店使用時，則參數請帶平台商所綁的特店編號 `MerchantID`。
	PlatformID  *string          `json:"PlatformID,omitempty"`
	InvoiceMark *InvoiceMarkEnum `json:"InvoiceMark,omitempty"`
	// **自訂名稱欄位1**   提供合作廠商使用記錄用客製化使用欄位   注意事項：   特殊符號只支援 `,.#()$[];%{}:/?&@<>!`
	CustomField1 *string `json:"CustomField1,omitempty"`
	// **自訂名稱欄位2**   提供合作廠商使用記錄用客製化使用欄位   注意事項：   特殊符號只支援 `,.#()$[];%{}:/?&@<>!`
	CustomField2 *string `json:"CustomField2,omitempty"`
	// **自訂名稱欄位3**   提供合作廠商使用記錄用客製化使用欄位   注意事項：   特殊符號只支援 `,.#()$[];%{}:/?&@<>!`
	CustomField3 *string `json:"CustomField3,omitempty"`
	// **自訂名稱欄位4**   提供合作廠商使用記錄用客製化使用欄位   注意事項：   特殊符號只支援 `,.#()$[];%{}:/?&@<>!`
	CustomField4 *string         `json:"CustomField4,omitempty"`
	EncryptType  EncryptTypeEnum `json:"EncryptType"`
	Language     *LanguageEnum   `json:"Language,omitempty"`
	// **超商繳費截止時間**   注意事項：   `CVS`:以分鐘為單位   `BARCODE`:以天為單位   若未設定此參數，`CVS` 預設為 `10080` 分鐘(`7` 天)；BARCODE 預設為 `7` 天。   若需設定此參數，請於建立訂單時將此參數送給綠界。提醒您，CVS 帶入數值不可超過 `86400` 分鐘，超過時一律以 `86400` 分鐘計(`60` 天)   例：`08/01` 的 `20:15` 分購買商品，繳費期限為 `7` 天，表示 `8/08` 的 `20:15` 分前您必須前往超商繳費。   範例: `CVS`=`1440`(共 `1` 天)、`BARCODE`=`7`(共 `7` 天)
	StoreExpireDate *int32 `json:"StoreExpireDate,omitempty"`
	// **交易描述1** 會出現在超商繳費平台螢幕上
	Desc1 *string `json:"Desc_1,omitempty"`
	// **交易描述2** 會出現在超商繳費平台螢幕上
	Desc2 *string `json:"Desc_2,omitempty"`
	// **交易描述3** 會出現在超商繳費平台螢幕上
	Desc3 *string `json:"Desc_3,omitempty"`
	// **交易描述4** 會出現在超商繳費平台螢幕上
	Desc4 *string `json:"Desc_4,omitempty"`
	// **Server 端回傳付款相關資訊**   若有設定此參數，訂單建立完成後(非付款完成)，綠界會 Server 端背景回傳消費者付款方式相關資訊(例：繳費代碼與繳費超商)。   請參考[`ATM`、`CVS` 或 `BARCODE` 的取號結果通知.]   注意事項：   頁面將會停留在綠界，顯示繳費的相關資訊。   回傳只有三段號碼，並不會回傳條碼圖，需自行轉換成 code39 的三段條碼。
	PaymentInfoURL *string `json:"PaymentInfoURL,omitempty"`
	// **Client端回傳付款方式相關資訊**   若有設定此參數，訂單建立完成後(非付款完成)，綠界會從 Client 端回傳消費者付款方式相關資訊(例：繳費代碼與繳費超商)且將頁面轉到特店指定的頁面。   請參考[`ATM`、`CVS` 或 `BARCODE` 的取號結果通知.]   注意事項：   若設定此參數，將會使設定的返回特店的按鈕連結[ClientBackURL]失效。   若導回網址未使用 https 時，部份瀏覽器可能會出現警告訊息。   回傳只有三段號碼，並不會回傳條碼圖，需自行轉換成 code39 的三段條碼。
	ClientRedirectURL *string          `json:"ClientRedirectURL,omitempty"`
	BindingCard       *BindingCardEnum `json:"BindingCard,omitempty"`
	// **記憶卡號識別碼** 記憶卡號識別碼 (特店代號 `MerchantID` + `廠商會員編號`)
	MerchantMemberID *string       `json:"MerchantMemberID,omitempty"`
	Redeem           *RedeemEnum   `json:"Redeem,omitempty"`
	UnionPay         *UnionPayEnum `json:"UnionPay,omitempty"`
	// **刷卡分期期數**    提供刷卡分期期數   信用卡分期可用參數為:3,6,12,18,24   注意事項：   使用的期數必須先透過申請開通後方能使用，並以申請開通的期數為主。
	CreditInstallment *string `json:"CreditInstallment,omitempty"`
	// **每次授權金額**   每次要授權(扣款)的金額。   注意事項：   綠界會依此次授權金額`PeriodAmount`所設定的金額做為之後固定授權的金額。   交易金額`TotalAmount`設定金額必須和授權金額`PeriodAmount`相同。   請帶整數，不可有小數點。僅限新台幣。
	PeriodAmount *int32                `json:"PeriodAmount,omitempty"`
	PeriodType   *CreditPeriodTypeEnum `json:"PeriodType,omitempty"`
	// **執行頻率**   此參數用來定義多久要執行一次   注意事項：   至少要大於等於 1 次以上。   當 `PeriodType` 設為 `D` 時，最多可設 `365` 次。    當 `PeriodType` 設為 `M` 時，最多可設 `12` 次。     當 `PeriodType` 設為 `Y` 時，最多可設 `1` 次。
	Frequency *int32 `json:"Frequency,omitempty"`
	// **執行次數**   總共要執行幾次。   注意事項：   至少要大於 1 次以上。   當 `PeriodType` 設為 `D` 時，最多可設 `999`次。   當 `PeriodType` 設為 `M` 時，最多可設 `99`次。   當 `PeriodType` 設為 `Y` 時，最多可設 `9` 次。    例 1：   當信用卡定期定額扣款為每個月扣 1 次500 元，總共要扣 12次   `TotalAmount`參數請帶 `500` `PeriodAmount`=`500`   `PeriodType`=`M`   `Frequency`=`1`   `ExecTimes`=`12`    例 2：   當信用卡定期定額扣款為 6000 元，每 6 個月扣 1 次，總共要扣 2 次時    交易金額`TotalAmount`參數請帶 `6000`   `PeriodType`=`M`   `Frequency`=`6`   `ExecTimes`=`2`
	ExecTimes *int32 `json:"ExecTimes,omitempty"`
	// **定期定額的執行結果回應URL**   若交易是信用卡定期定額的方式，則每次執行授權完，會將授權結果回傳到這個設定的 URL。   回覆內容請參考。
	PeriodReturnURL *string `json:"PeriodReturnURL,omitempty"`
	// **特店自訂編號** 此為特店自訂編號，編號均為唯一值不可重複使用。
	RelateNumber *string `json:"RelateNumber,omitempty"`
	// **客戶編號** 該參數有值時，僅接受『英文、數字、下底線』等字元。
	CustomerID *string `json:"CustomerID,omitempty"`
	// **統一編號** 該參數有值時，請帶固定長度為數字 8 碼。
	CustomerIdentifier *string `json:"CustomerIdentifier,omitempty"`
	// **客戶名稱**    當列印註記`Print`為 `1`(列印)時，則該參數必須有值。   該參數有值時，僅接受『中、英文及數字』等字元。   請將參數值做 UrlEncode 方式編碼。
	CustomerName *string `json:"CustomerName,omitempty"`
	// **客戶地址**    當列印註記`Print`為 `1`(列印)時，則該參數必須有值。   當該參數有值時，請注意特殊字元轉換 。    請將參數值做 UrlEncode 方式編碼。
	CustomerAddr *string `json:"CustomerAddr,omitempty"`
	// **客戶手機號碼**   當客戶電子信箱`CustomerEmail`為空字串時，則該參數必須有值。   當該參數有值時，則格式為數字。   注意事項：   請填手機號碼，不能填市話因為要收簡訊通知用
	CustomerPhone *string `json:"CustomerPhone,omitempty"`
	// **客戶電子信箱**   當客戶手機號碼`CustomerPhone`為空字串時，則該參數必須有值。   當該參數有值時，則格式需符合 EMAIL格式。   請將參數值做 UrlEncode 方式編碼。
	CustomerEmail *string            `json:"CustomerEmail,omitempty"`
	ClearanceMark *ClearanceMarkEnum `json:"ClearanceMark,omitempty"`
	TaxType       *TaxTypeEnum       `json:"TaxType,omitempty"`
	CarruerType   *CarruerTypeEnum   `json:"CarruerType,omitempty"`
	// **載具編號**   1. 當載具類別 `CarruerType`=``無載具)，請帶空字串。   2. 當載具類別`CarruerType`=`1`(綠界科技電子發票載具)時，請帶空字串，系統會自動帶入值，為合作特店載具統一編號+自訂編號(RelateNumber)。   3. 當載具類別`CarruerType`=`2`(買受人之自然人憑證)時，則請帶固定長度為16且格式 為2碼大寫英文字母加上14碼數字。   4. 當載具類別`CarruerType`=`3`(買受人之手機條碼)時，則請帶固定長度為 8且格式為 1 碼斜線「/」加上由 7 碼數字及大寫英文字母及+-.符號組成。    注意事項：   1. 若手機條碼中有加號，可能在介接驗證時 發生錯誤，請將加號改為空白字元，產生 驗證碼。   2. 英文、數字、符號僅接受半形字   3. 若載具編號為手機條碼載具時，請先呼叫B2C電子發票介接技術文件手機條碼載驗證ＡＰＩ進行檢核
	CarruerNum *string              `json:"CarruerNum,omitempty"`
	Donation   *InvoiceDonationEunm `json:"Donation,omitempty"`
	// **捐贈碼**   消費者選擇捐贈發票則於此欄位須填入受贈單位之捐贈碼。   1. 若捐贈註記 `Donation`= `1` (捐贈)時，此欄位須有值。   2. 捐贈碼以阿拉伯數字為限，最少三碼，最多七碼。內容定位採「文字格式」，首位可以為零。
	LoveCode *string           `json:"LoveCode,omitempty"`
	Print    *InvoicePrintEnum `json:"Print,omitempty"`
	// **商品名稱**   預設不可為空字串且格式為 名稱 1 | 名稱 2 | 名稱 3 | … | 名稱 n，當含有二筆或以上的商品名稱時，則以「|」符號區隔。   將參數值以 UrlEncode 方式編碼。
	InvoiceItemName *string `json:"InvoiceItemName,omitempty"`
	// **商品數量**   預設不可為空字串且格式為 數量 1 | 數量 2 | 數量 3 | … | 數量 n，當含有二筆或以上的商品名稱時，則以「|」符號區隔。
	InvoiceItemCount *string `json:"InvoiceItemCount,omitempty"`
	// **商品單位**   商品單位若超過二筆以上請以「|」符號區隔單位最大長度為 6 碼。   請將參數做 UrlEncode 方式編碼。
	InvoiceItemWord *string `json:"InvoiceItemWord,omitempty"`
	// **商品價格**   預設不可為空字串且格式為 價格 1 | 價格 2 | 價格 3 | … | 價格 n，當含有二筆或以上的商品價格時，則以「|」符號區隔。
	InvoiceItemPrice *string `json:"InvoiceItemPrice,omitempty"`
	// **商品課稅別**   1：應稅   2：零稅率   3：免稅   注意事項：   1. 預設為空字串，當課稅類別 [TaxType] = 9 時，此欄位不可為空。   2. 格式為課稅 類別 1 | 課稅類別 2 | 課稅類別 3 | … | 課稅類別 n。當含有二筆或以上的商品課稅類別時，則以「|」符號區隔。   3. 課稅類別為混合稅率時，需含二筆或 以 上 的 商 品 課 稅   別[InvoiceItemTaxType]，且至少需有一筆商品課稅別為應稅及至少需有一筆商品課稅別為免稅或零稅率，即混稅發票只能 1.應稅+免稅 2.應稅+零稅率，免稅和零稅率發票不能同時開立。
	InvoiceItemTaxType *string `json:"InvoiceItemTaxType,omitempty"`
	// **備註** 當該參數有值時，請將參數值做UrlEncode 方式編碼。
	InvoiceRemark *string `json:"InvoiceRemark,omitempty"`
	// **延遲天數**   本參數值請帶 0~15(天)，當天數為 0 時，則付款完成後立即開立發票。
	DelayDay *string `json:"DelayDay,omitempty"`
	// **字軌類別**   若為一般稅額時，請帶 07。   預設值：07
	InvType *string `json:"InvType,omitempty"`
}

// NewAioCheckOutRequest instantiates a new AioCheckOutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAioCheckOutRequest(merchantID string, merchantTradeNo string, merchantTradeDate ECPayDateTime, paymentType AioCheckPaymentTypeEnum, totalAmount int32, tradeDesc string, itemName string, returnURL string, choosePayment ChoosePaymentEnum, checkMacValue string, encryptType EncryptTypeEnum) *AioCheckOutRequest {
	this := AioCheckOutRequest{}
	this.MerchantID = merchantID
	this.MerchantTradeNo = merchantTradeNo
	this.MerchantTradeDate = merchantTradeDate
	this.PaymentType = paymentType
	this.TotalAmount = totalAmount
	this.TradeDesc = tradeDesc
	this.ItemName = itemName
	this.ReturnURL = returnURL
	this.ChoosePayment = choosePayment
	this.CheckMacValue = checkMacValue
	this.EncryptType = encryptType
	var unionPay UnionPayEnum = UNIONPAYENUM_NOT_SPECIFIED
	this.UnionPay = &unionPay
	return &this
}

// NewAioCheckOutRequestWithDefaults instantiates a new AioCheckOutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAioCheckOutRequestWithDefaults() *AioCheckOutRequest {
	this := AioCheckOutRequest{}
	var paymentType AioCheckPaymentTypeEnum = "aio"
	this.PaymentType = paymentType
	var encryptType EncryptTypeEnum = ENCRYPTTYPEENUM_SHA256
	this.EncryptType = encryptType
	var unionPay UnionPayEnum = UNIONPAYENUM_NOT_SPECIFIED
	this.UnionPay = &unionPay
	return &this
}

// GetMerchantID returns the MerchantID field value
func (o *AioCheckOutRequest) GetMerchantID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantID
}

// GetMerchantIDOk returns a tuple with the MerchantID field value
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetMerchantIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MerchantID, true
}

// SetMerchantID sets field value
func (o *AioCheckOutRequest) SetMerchantID(v string) {
	o.MerchantID = v
}

// GetMerchantTradeNo returns the MerchantTradeNo field value
func (o *AioCheckOutRequest) GetMerchantTradeNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantTradeNo
}

// GetMerchantTradeNoOk returns a tuple with the MerchantTradeNo field value
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetMerchantTradeNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MerchantTradeNo, true
}

// SetMerchantTradeNo sets field value
func (o *AioCheckOutRequest) SetMerchantTradeNo(v string) {
	o.MerchantTradeNo = v
}

// GetStoreID returns the StoreID field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetStoreID() string {
	if o == nil || o.StoreID == nil {
		var ret string
		return ret
	}
	return *o.StoreID
}

// GetStoreIDOk returns a tuple with the StoreID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetStoreIDOk() (*string, bool) {
	if o == nil || o.StoreID == nil {
		return nil, false
	}
	return o.StoreID, true
}

// HasStoreID returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasStoreID() bool {
	if o != nil && o.StoreID != nil {
		return true
	}

	return false
}

// SetStoreID gets a reference to the given string and assigns it to the StoreID field.
func (o *AioCheckOutRequest) SetStoreID(v string) {
	o.StoreID = &v
}

// GetMerchantTradeDate returns the MerchantTradeDate field value
func (o *AioCheckOutRequest) GetMerchantTradeDate() ECPayDateTime {
	if o == nil {
		var ret ECPayDateTime
		return ret
	}

	return o.MerchantTradeDate
}

// GetMerchantTradeDateOk returns a tuple with the MerchantTradeDate field value
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetMerchantTradeDateOk() (*ECPayDateTime, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MerchantTradeDate, true
}

// SetMerchantTradeDate sets field value
func (o *AioCheckOutRequest) SetMerchantTradeDate(v ECPayDateTime) {
	o.MerchantTradeDate = v
}

// GetPaymentType returns the PaymentType field value
func (o *AioCheckOutRequest) GetPaymentType() AioCheckPaymentTypeEnum {
	if o == nil {
		var ret AioCheckPaymentTypeEnum
		return ret
	}

	return o.PaymentType
}

// GetPaymentTypeOk returns a tuple with the PaymentType field value
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetPaymentTypeOk() (*AioCheckPaymentTypeEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentType, true
}

// SetPaymentType sets field value
func (o *AioCheckOutRequest) SetPaymentType(v AioCheckPaymentTypeEnum) {
	o.PaymentType = v
}

// GetTotalAmount returns the TotalAmount field value
func (o *AioCheckOutRequest) GetTotalAmount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalAmount
}

// GetTotalAmountOk returns a tuple with the TotalAmount field value
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetTotalAmountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalAmount, true
}

// SetTotalAmount sets field value
func (o *AioCheckOutRequest) SetTotalAmount(v int32) {
	o.TotalAmount = v
}

// GetTradeDesc returns the TradeDesc field value
func (o *AioCheckOutRequest) GetTradeDesc() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TradeDesc
}

// GetTradeDescOk returns a tuple with the TradeDesc field value
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetTradeDescOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TradeDesc, true
}

// SetTradeDesc sets field value
func (o *AioCheckOutRequest) SetTradeDesc(v string) {
	o.TradeDesc = v
}

// GetItemName returns the ItemName field value
func (o *AioCheckOutRequest) GetItemName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ItemName
}

// GetItemNameOk returns a tuple with the ItemName field value
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetItemNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ItemName, true
}

// SetItemName sets field value
func (o *AioCheckOutRequest) SetItemName(v string) {
	o.ItemName = v
}

// GetReturnURL returns the ReturnURL field value
func (o *AioCheckOutRequest) GetReturnURL() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReturnURL
}

// GetReturnURLOk returns a tuple with the ReturnURL field value
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetReturnURLOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReturnURL, true
}

// SetReturnURL sets field value
func (o *AioCheckOutRequest) SetReturnURL(v string) {
	o.ReturnURL = v
}

// GetChoosePayment returns the ChoosePayment field value
func (o *AioCheckOutRequest) GetChoosePayment() ChoosePaymentEnum {
	if o == nil {
		var ret ChoosePaymentEnum
		return ret
	}

	return o.ChoosePayment
}

// GetChoosePaymentOk returns a tuple with the ChoosePayment field value
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetChoosePaymentOk() (*ChoosePaymentEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChoosePayment, true
}

// SetChoosePayment sets field value
func (o *AioCheckOutRequest) SetChoosePayment(v ChoosePaymentEnum) {
	o.ChoosePayment = v
}

// GetCheckMacValue returns the CheckMacValue field value
func (o *AioCheckOutRequest) GetCheckMacValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CheckMacValue
}

// GetCheckMacValueOk returns a tuple with the CheckMacValue field value
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetCheckMacValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CheckMacValue, true
}

// SetCheckMacValue sets field value
func (o *AioCheckOutRequest) SetCheckMacValue(v string) {
	o.CheckMacValue = v
}

// GetClientBackURL returns the ClientBackURL field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetClientBackURL() string {
	if o == nil || o.ClientBackURL == nil {
		var ret string
		return ret
	}
	return *o.ClientBackURL
}

// GetClientBackURLOk returns a tuple with the ClientBackURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetClientBackURLOk() (*string, bool) {
	if o == nil || o.ClientBackURL == nil {
		return nil, false
	}
	return o.ClientBackURL, true
}

// HasClientBackURL returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasClientBackURL() bool {
	if o != nil && o.ClientBackURL != nil {
		return true
	}

	return false
}

// SetClientBackURL gets a reference to the given string and assigns it to the ClientBackURL field.
func (o *AioCheckOutRequest) SetClientBackURL(v string) {
	o.ClientBackURL = &v
}

// GetItemURL returns the ItemURL field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetItemURL() string {
	if o == nil || o.ItemURL == nil {
		var ret string
		return ret
	}
	return *o.ItemURL
}

// GetItemURLOk returns a tuple with the ItemURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetItemURLOk() (*string, bool) {
	if o == nil || o.ItemURL == nil {
		return nil, false
	}
	return o.ItemURL, true
}

// HasItemURL returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasItemURL() bool {
	if o != nil && o.ItemURL != nil {
		return true
	}

	return false
}

// SetItemURL gets a reference to the given string and assigns it to the ItemURL field.
func (o *AioCheckOutRequest) SetItemURL(v string) {
	o.ItemURL = &v
}

// GetRemark returns the Remark field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetRemark() string {
	if o == nil || o.Remark == nil {
		var ret string
		return ret
	}
	return *o.Remark
}

// GetRemarkOk returns a tuple with the Remark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetRemarkOk() (*string, bool) {
	if o == nil || o.Remark == nil {
		return nil, false
	}
	return o.Remark, true
}

// HasRemark returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasRemark() bool {
	if o != nil && o.Remark != nil {
		return true
	}

	return false
}

// SetRemark gets a reference to the given string and assigns it to the Remark field.
func (o *AioCheckOutRequest) SetRemark(v string) {
	o.Remark = &v
}

// GetChooseSubPayment returns the ChooseSubPayment field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetChooseSubPayment() string {
	if o == nil || o.ChooseSubPayment == nil {
		var ret string
		return ret
	}
	return *o.ChooseSubPayment
}

// GetChooseSubPaymentOk returns a tuple with the ChooseSubPayment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetChooseSubPaymentOk() (*string, bool) {
	if o == nil || o.ChooseSubPayment == nil {
		return nil, false
	}
	return o.ChooseSubPayment, true
}

// HasChooseSubPayment returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasChooseSubPayment() bool {
	if o != nil && o.ChooseSubPayment != nil {
		return true
	}

	return false
}

// SetChooseSubPayment gets a reference to the given string and assigns it to the ChooseSubPayment field.
func (o *AioCheckOutRequest) SetChooseSubPayment(v string) {
	o.ChooseSubPayment = &v
}

// GetOrderResultURL returns the OrderResultURL field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetOrderResultURL() string {
	if o == nil || o.OrderResultURL == nil {
		var ret string
		return ret
	}
	return *o.OrderResultURL
}

// GetOrderResultURLOk returns a tuple with the OrderResultURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetOrderResultURLOk() (*string, bool) {
	if o == nil || o.OrderResultURL == nil {
		return nil, false
	}
	return o.OrderResultURL, true
}

// HasOrderResultURL returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasOrderResultURL() bool {
	if o != nil && o.OrderResultURL != nil {
		return true
	}

	return false
}

// SetOrderResultURL gets a reference to the given string and assigns it to the OrderResultURL field.
func (o *AioCheckOutRequest) SetOrderResultURL(v string) {
	o.OrderResultURL = &v
}

// GetNeedExtraPaidInfo returns the NeedExtraPaidInfo field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetNeedExtraPaidInfo() NeedExtraPaidInfoEnum {
	if o == nil || o.NeedExtraPaidInfo == nil {
		var ret NeedExtraPaidInfoEnum
		return ret
	}
	return *o.NeedExtraPaidInfo
}

// GetNeedExtraPaidInfoOk returns a tuple with the NeedExtraPaidInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetNeedExtraPaidInfoOk() (*NeedExtraPaidInfoEnum, bool) {
	if o == nil || o.NeedExtraPaidInfo == nil {
		return nil, false
	}
	return o.NeedExtraPaidInfo, true
}

// HasNeedExtraPaidInfo returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasNeedExtraPaidInfo() bool {
	if o != nil && o.NeedExtraPaidInfo != nil {
		return true
	}

	return false
}

// SetNeedExtraPaidInfo gets a reference to the given NeedExtraPaidInfoEnum and assigns it to the NeedExtraPaidInfo field.
func (o *AioCheckOutRequest) SetNeedExtraPaidInfo(v NeedExtraPaidInfoEnum) {
	o.NeedExtraPaidInfo = &v
}

// GetDeviceSource returns the DeviceSource field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetDeviceSource() string {
	if o == nil || o.DeviceSource == nil {
		var ret string
		return ret
	}
	return *o.DeviceSource
}

// GetDeviceSourceOk returns a tuple with the DeviceSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetDeviceSourceOk() (*string, bool) {
	if o == nil || o.DeviceSource == nil {
		return nil, false
	}
	return o.DeviceSource, true
}

// HasDeviceSource returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasDeviceSource() bool {
	if o != nil && o.DeviceSource != nil {
		return true
	}

	return false
}

// SetDeviceSource gets a reference to the given string and assigns it to the DeviceSource field.
func (o *AioCheckOutRequest) SetDeviceSource(v string) {
	o.DeviceSource = &v
}

// GetIgnorePayment returns the IgnorePayment field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetIgnorePayment() string {
	if o == nil || o.IgnorePayment == nil {
		var ret string
		return ret
	}
	return *o.IgnorePayment
}

// GetIgnorePaymentOk returns a tuple with the IgnorePayment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetIgnorePaymentOk() (*string, bool) {
	if o == nil || o.IgnorePayment == nil {
		return nil, false
	}
	return o.IgnorePayment, true
}

// HasIgnorePayment returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasIgnorePayment() bool {
	if o != nil && o.IgnorePayment != nil {
		return true
	}

	return false
}

// SetIgnorePayment gets a reference to the given string and assigns it to the IgnorePayment field.
func (o *AioCheckOutRequest) SetIgnorePayment(v string) {
	o.IgnorePayment = &v
}

// GetPlatformID returns the PlatformID field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetPlatformID() string {
	if o == nil || o.PlatformID == nil {
		var ret string
		return ret
	}
	return *o.PlatformID
}

// GetPlatformIDOk returns a tuple with the PlatformID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetPlatformIDOk() (*string, bool) {
	if o == nil || o.PlatformID == nil {
		return nil, false
	}
	return o.PlatformID, true
}

// HasPlatformID returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasPlatformID() bool {
	if o != nil && o.PlatformID != nil {
		return true
	}

	return false
}

// SetPlatformID gets a reference to the given string and assigns it to the PlatformID field.
func (o *AioCheckOutRequest) SetPlatformID(v string) {
	o.PlatformID = &v
}

// GetInvoiceMark returns the InvoiceMark field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetInvoiceMark() InvoiceMarkEnum {
	if o == nil || o.InvoiceMark == nil {
		var ret InvoiceMarkEnum
		return ret
	}
	return *o.InvoiceMark
}

// GetInvoiceMarkOk returns a tuple with the InvoiceMark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetInvoiceMarkOk() (*InvoiceMarkEnum, bool) {
	if o == nil || o.InvoiceMark == nil {
		return nil, false
	}
	return o.InvoiceMark, true
}

// HasInvoiceMark returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasInvoiceMark() bool {
	if o != nil && o.InvoiceMark != nil {
		return true
	}

	return false
}

// SetInvoiceMark gets a reference to the given InvoiceMarkEnum and assigns it to the InvoiceMark field.
func (o *AioCheckOutRequest) SetInvoiceMark(v InvoiceMarkEnum) {
	o.InvoiceMark = &v
}

// GetCustomField1 returns the CustomField1 field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetCustomField1() string {
	if o == nil || o.CustomField1 == nil {
		var ret string
		return ret
	}
	return *o.CustomField1
}

// GetCustomField1Ok returns a tuple with the CustomField1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetCustomField1Ok() (*string, bool) {
	if o == nil || o.CustomField1 == nil {
		return nil, false
	}
	return o.CustomField1, true
}

// HasCustomField1 returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasCustomField1() bool {
	if o != nil && o.CustomField1 != nil {
		return true
	}

	return false
}

// SetCustomField1 gets a reference to the given string and assigns it to the CustomField1 field.
func (o *AioCheckOutRequest) SetCustomField1(v string) {
	o.CustomField1 = &v
}

// GetCustomField2 returns the CustomField2 field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetCustomField2() string {
	if o == nil || o.CustomField2 == nil {
		var ret string
		return ret
	}
	return *o.CustomField2
}

// GetCustomField2Ok returns a tuple with the CustomField2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetCustomField2Ok() (*string, bool) {
	if o == nil || o.CustomField2 == nil {
		return nil, false
	}
	return o.CustomField2, true
}

// HasCustomField2 returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasCustomField2() bool {
	if o != nil && o.CustomField2 != nil {
		return true
	}

	return false
}

// SetCustomField2 gets a reference to the given string and assigns it to the CustomField2 field.
func (o *AioCheckOutRequest) SetCustomField2(v string) {
	o.CustomField2 = &v
}

// GetCustomField3 returns the CustomField3 field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetCustomField3() string {
	if o == nil || o.CustomField3 == nil {
		var ret string
		return ret
	}
	return *o.CustomField3
}

// GetCustomField3Ok returns a tuple with the CustomField3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetCustomField3Ok() (*string, bool) {
	if o == nil || o.CustomField3 == nil {
		return nil, false
	}
	return o.CustomField3, true
}

// HasCustomField3 returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasCustomField3() bool {
	if o != nil && o.CustomField3 != nil {
		return true
	}

	return false
}

// SetCustomField3 gets a reference to the given string and assigns it to the CustomField3 field.
func (o *AioCheckOutRequest) SetCustomField3(v string) {
	o.CustomField3 = &v
}

// GetCustomField4 returns the CustomField4 field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetCustomField4() string {
	if o == nil || o.CustomField4 == nil {
		var ret string
		return ret
	}
	return *o.CustomField4
}

// GetCustomField4Ok returns a tuple with the CustomField4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetCustomField4Ok() (*string, bool) {
	if o == nil || o.CustomField4 == nil {
		return nil, false
	}
	return o.CustomField4, true
}

// HasCustomField4 returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasCustomField4() bool {
	if o != nil && o.CustomField4 != nil {
		return true
	}

	return false
}

// SetCustomField4 gets a reference to the given string and assigns it to the CustomField4 field.
func (o *AioCheckOutRequest) SetCustomField4(v string) {
	o.CustomField4 = &v
}

// GetEncryptType returns the EncryptType field value
func (o *AioCheckOutRequest) GetEncryptType() EncryptTypeEnum {
	if o == nil {
		var ret EncryptTypeEnum
		return ret
	}

	return o.EncryptType
}

// GetEncryptTypeOk returns a tuple with the EncryptType field value
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetEncryptTypeOk() (*EncryptTypeEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EncryptType, true
}

// SetEncryptType sets field value
func (o *AioCheckOutRequest) SetEncryptType(v EncryptTypeEnum) {
	o.EncryptType = v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetLanguage() LanguageEnum {
	if o == nil || o.Language == nil {
		var ret LanguageEnum
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetLanguageOk() (*LanguageEnum, bool) {
	if o == nil || o.Language == nil {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasLanguage() bool {
	if o != nil && o.Language != nil {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given LanguageEnum and assigns it to the Language field.
func (o *AioCheckOutRequest) SetLanguage(v LanguageEnum) {
	o.Language = &v
}

// GetStoreExpireDate returns the StoreExpireDate field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetStoreExpireDate() int32 {
	if o == nil || o.StoreExpireDate == nil {
		var ret int32
		return ret
	}
	return *o.StoreExpireDate
}

// GetStoreExpireDateOk returns a tuple with the StoreExpireDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetStoreExpireDateOk() (*int32, bool) {
	if o == nil || o.StoreExpireDate == nil {
		return nil, false
	}
	return o.StoreExpireDate, true
}

// HasStoreExpireDate returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasStoreExpireDate() bool {
	if o != nil && o.StoreExpireDate != nil {
		return true
	}

	return false
}

// SetStoreExpireDate gets a reference to the given int32 and assigns it to the StoreExpireDate field.
func (o *AioCheckOutRequest) SetStoreExpireDate(v int32) {
	o.StoreExpireDate = &v
}

// GetDesc1 returns the Desc1 field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetDesc1() string {
	if o == nil || o.Desc1 == nil {
		var ret string
		return ret
	}
	return *o.Desc1
}

// GetDesc1Ok returns a tuple with the Desc1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetDesc1Ok() (*string, bool) {
	if o == nil || o.Desc1 == nil {
		return nil, false
	}
	return o.Desc1, true
}

// HasDesc1 returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasDesc1() bool {
	if o != nil && o.Desc1 != nil {
		return true
	}

	return false
}

// SetDesc1 gets a reference to the given string and assigns it to the Desc1 field.
func (o *AioCheckOutRequest) SetDesc1(v string) {
	o.Desc1 = &v
}

// GetDesc2 returns the Desc2 field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetDesc2() string {
	if o == nil || o.Desc2 == nil {
		var ret string
		return ret
	}
	return *o.Desc2
}

// GetDesc2Ok returns a tuple with the Desc2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetDesc2Ok() (*string, bool) {
	if o == nil || o.Desc2 == nil {
		return nil, false
	}
	return o.Desc2, true
}

// HasDesc2 returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasDesc2() bool {
	if o != nil && o.Desc2 != nil {
		return true
	}

	return false
}

// SetDesc2 gets a reference to the given string and assigns it to the Desc2 field.
func (o *AioCheckOutRequest) SetDesc2(v string) {
	o.Desc2 = &v
}

// GetDesc3 returns the Desc3 field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetDesc3() string {
	if o == nil || o.Desc3 == nil {
		var ret string
		return ret
	}
	return *o.Desc3
}

// GetDesc3Ok returns a tuple with the Desc3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetDesc3Ok() (*string, bool) {
	if o == nil || o.Desc3 == nil {
		return nil, false
	}
	return o.Desc3, true
}

// HasDesc3 returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasDesc3() bool {
	if o != nil && o.Desc3 != nil {
		return true
	}

	return false
}

// SetDesc3 gets a reference to the given string and assigns it to the Desc3 field.
func (o *AioCheckOutRequest) SetDesc3(v string) {
	o.Desc3 = &v
}

// GetDesc4 returns the Desc4 field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetDesc4() string {
	if o == nil || o.Desc4 == nil {
		var ret string
		return ret
	}
	return *o.Desc4
}

// GetDesc4Ok returns a tuple with the Desc4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetDesc4Ok() (*string, bool) {
	if o == nil || o.Desc4 == nil {
		return nil, false
	}
	return o.Desc4, true
}

// HasDesc4 returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasDesc4() bool {
	if o != nil && o.Desc4 != nil {
		return true
	}

	return false
}

// SetDesc4 gets a reference to the given string and assigns it to the Desc4 field.
func (o *AioCheckOutRequest) SetDesc4(v string) {
	o.Desc4 = &v
}

// GetPaymentInfoURL returns the PaymentInfoURL field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetPaymentInfoURL() string {
	if o == nil || o.PaymentInfoURL == nil {
		var ret string
		return ret
	}
	return *o.PaymentInfoURL
}

// GetPaymentInfoURLOk returns a tuple with the PaymentInfoURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetPaymentInfoURLOk() (*string, bool) {
	if o == nil || o.PaymentInfoURL == nil {
		return nil, false
	}
	return o.PaymentInfoURL, true
}

// HasPaymentInfoURL returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasPaymentInfoURL() bool {
	if o != nil && o.PaymentInfoURL != nil {
		return true
	}

	return false
}

// SetPaymentInfoURL gets a reference to the given string and assigns it to the PaymentInfoURL field.
func (o *AioCheckOutRequest) SetPaymentInfoURL(v string) {
	o.PaymentInfoURL = &v
}

// GetClientRedirectURL returns the ClientRedirectURL field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetClientRedirectURL() string {
	if o == nil || o.ClientRedirectURL == nil {
		var ret string
		return ret
	}
	return *o.ClientRedirectURL
}

// GetClientRedirectURLOk returns a tuple with the ClientRedirectURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetClientRedirectURLOk() (*string, bool) {
	if o == nil || o.ClientRedirectURL == nil {
		return nil, false
	}
	return o.ClientRedirectURL, true
}

// HasClientRedirectURL returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasClientRedirectURL() bool {
	if o != nil && o.ClientRedirectURL != nil {
		return true
	}

	return false
}

// SetClientRedirectURL gets a reference to the given string and assigns it to the ClientRedirectURL field.
func (o *AioCheckOutRequest) SetClientRedirectURL(v string) {
	o.ClientRedirectURL = &v
}

// GetBindingCard returns the BindingCard field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetBindingCard() BindingCardEnum {
	if o == nil || o.BindingCard == nil {
		var ret BindingCardEnum
		return ret
	}
	return *o.BindingCard
}

// GetBindingCardOk returns a tuple with the BindingCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetBindingCardOk() (*BindingCardEnum, bool) {
	if o == nil || o.BindingCard == nil {
		return nil, false
	}
	return o.BindingCard, true
}

// HasBindingCard returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasBindingCard() bool {
	if o != nil && o.BindingCard != nil {
		return true
	}

	return false
}

// SetBindingCard gets a reference to the given BindingCardEnum and assigns it to the BindingCard field.
func (o *AioCheckOutRequest) SetBindingCard(v BindingCardEnum) {
	o.BindingCard = &v
}

// GetMerchantMemberID returns the MerchantMemberID field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetMerchantMemberID() string {
	if o == nil || o.MerchantMemberID == nil {
		var ret string
		return ret
	}
	return *o.MerchantMemberID
}

// GetMerchantMemberIDOk returns a tuple with the MerchantMemberID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetMerchantMemberIDOk() (*string, bool) {
	if o == nil || o.MerchantMemberID == nil {
		return nil, false
	}
	return o.MerchantMemberID, true
}

// HasMerchantMemberID returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasMerchantMemberID() bool {
	if o != nil && o.MerchantMemberID != nil {
		return true
	}

	return false
}

// SetMerchantMemberID gets a reference to the given string and assigns it to the MerchantMemberID field.
func (o *AioCheckOutRequest) SetMerchantMemberID(v string) {
	o.MerchantMemberID = &v
}

// GetRedeem returns the Redeem field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetRedeem() RedeemEnum {
	if o == nil || o.Redeem == nil {
		var ret RedeemEnum
		return ret
	}
	return *o.Redeem
}

// GetRedeemOk returns a tuple with the Redeem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetRedeemOk() (*RedeemEnum, bool) {
	if o == nil || o.Redeem == nil {
		return nil, false
	}
	return o.Redeem, true
}

// HasRedeem returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasRedeem() bool {
	if o != nil && o.Redeem != nil {
		return true
	}

	return false
}

// SetRedeem gets a reference to the given RedeemEnum and assigns it to the Redeem field.
func (o *AioCheckOutRequest) SetRedeem(v RedeemEnum) {
	o.Redeem = &v
}

// GetUnionPay returns the UnionPay field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetUnionPay() UnionPayEnum {
	if o == nil || o.UnionPay == nil {
		var ret UnionPayEnum
		return ret
	}
	return *o.UnionPay
}

// GetUnionPayOk returns a tuple with the UnionPay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetUnionPayOk() (*UnionPayEnum, bool) {
	if o == nil || o.UnionPay == nil {
		return nil, false
	}
	return o.UnionPay, true
}

// HasUnionPay returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasUnionPay() bool {
	if o != nil && o.UnionPay != nil {
		return true
	}

	return false
}

// SetUnionPay gets a reference to the given UnionPayEnum and assigns it to the UnionPay field.
func (o *AioCheckOutRequest) SetUnionPay(v UnionPayEnum) {
	o.UnionPay = &v
}

// GetCreditInstallment returns the CreditInstallment field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetCreditInstallment() string {
	if o == nil || o.CreditInstallment == nil {
		var ret string
		return ret
	}
	return *o.CreditInstallment
}

// GetCreditInstallmentOk returns a tuple with the CreditInstallment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetCreditInstallmentOk() (*string, bool) {
	if o == nil || o.CreditInstallment == nil {
		return nil, false
	}
	return o.CreditInstallment, true
}

// HasCreditInstallment returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasCreditInstallment() bool {
	if o != nil && o.CreditInstallment != nil {
		return true
	}

	return false
}

// SetCreditInstallment gets a reference to the given string and assigns it to the CreditInstallment field.
func (o *AioCheckOutRequest) SetCreditInstallment(v string) {
	o.CreditInstallment = &v
}

// GetPeriodAmount returns the PeriodAmount field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetPeriodAmount() int32 {
	if o == nil || o.PeriodAmount == nil {
		var ret int32
		return ret
	}
	return *o.PeriodAmount
}

// GetPeriodAmountOk returns a tuple with the PeriodAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetPeriodAmountOk() (*int32, bool) {
	if o == nil || o.PeriodAmount == nil {
		return nil, false
	}
	return o.PeriodAmount, true
}

// HasPeriodAmount returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasPeriodAmount() bool {
	if o != nil && o.PeriodAmount != nil {
		return true
	}

	return false
}

// SetPeriodAmount gets a reference to the given int32 and assigns it to the PeriodAmount field.
func (o *AioCheckOutRequest) SetPeriodAmount(v int32) {
	o.PeriodAmount = &v
}

// GetPeriodType returns the PeriodType field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetPeriodType() CreditPeriodTypeEnum {
	if o == nil || o.PeriodType == nil {
		var ret CreditPeriodTypeEnum
		return ret
	}
	return *o.PeriodType
}

// GetPeriodTypeOk returns a tuple with the PeriodType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetPeriodTypeOk() (*CreditPeriodTypeEnum, bool) {
	if o == nil || o.PeriodType == nil {
		return nil, false
	}
	return o.PeriodType, true
}

// HasPeriodType returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasPeriodType() bool {
	if o != nil && o.PeriodType != nil {
		return true
	}

	return false
}

// SetPeriodType gets a reference to the given CreditPeriodTypeEnum and assigns it to the PeriodType field.
func (o *AioCheckOutRequest) SetPeriodType(v CreditPeriodTypeEnum) {
	o.PeriodType = &v
}

// GetFrequency returns the Frequency field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetFrequency() int32 {
	if o == nil || o.Frequency == nil {
		var ret int32
		return ret
	}
	return *o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetFrequencyOk() (*int32, bool) {
	if o == nil || o.Frequency == nil {
		return nil, false
	}
	return o.Frequency, true
}

// HasFrequency returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasFrequency() bool {
	if o != nil && o.Frequency != nil {
		return true
	}

	return false
}

// SetFrequency gets a reference to the given int32 and assigns it to the Frequency field.
func (o *AioCheckOutRequest) SetFrequency(v int32) {
	o.Frequency = &v
}

// GetExecTimes returns the ExecTimes field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetExecTimes() int32 {
	if o == nil || o.ExecTimes == nil {
		var ret int32
		return ret
	}
	return *o.ExecTimes
}

// GetExecTimesOk returns a tuple with the ExecTimes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetExecTimesOk() (*int32, bool) {
	if o == nil || o.ExecTimes == nil {
		return nil, false
	}
	return o.ExecTimes, true
}

// HasExecTimes returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasExecTimes() bool {
	if o != nil && o.ExecTimes != nil {
		return true
	}

	return false
}

// SetExecTimes gets a reference to the given int32 and assigns it to the ExecTimes field.
func (o *AioCheckOutRequest) SetExecTimes(v int32) {
	o.ExecTimes = &v
}

// GetPeriodReturnURL returns the PeriodReturnURL field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetPeriodReturnURL() string {
	if o == nil || o.PeriodReturnURL == nil {
		var ret string
		return ret
	}
	return *o.PeriodReturnURL
}

// GetPeriodReturnURLOk returns a tuple with the PeriodReturnURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetPeriodReturnURLOk() (*string, bool) {
	if o == nil || o.PeriodReturnURL == nil {
		return nil, false
	}
	return o.PeriodReturnURL, true
}

// HasPeriodReturnURL returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasPeriodReturnURL() bool {
	if o != nil && o.PeriodReturnURL != nil {
		return true
	}

	return false
}

// SetPeriodReturnURL gets a reference to the given string and assigns it to the PeriodReturnURL field.
func (o *AioCheckOutRequest) SetPeriodReturnURL(v string) {
	o.PeriodReturnURL = &v
}

// GetRelateNumber returns the RelateNumber field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetRelateNumber() string {
	if o == nil || o.RelateNumber == nil {
		var ret string
		return ret
	}
	return *o.RelateNumber
}

// GetRelateNumberOk returns a tuple with the RelateNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetRelateNumberOk() (*string, bool) {
	if o == nil || o.RelateNumber == nil {
		return nil, false
	}
	return o.RelateNumber, true
}

// HasRelateNumber returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasRelateNumber() bool {
	if o != nil && o.RelateNumber != nil {
		return true
	}

	return false
}

// SetRelateNumber gets a reference to the given string and assigns it to the RelateNumber field.
func (o *AioCheckOutRequest) SetRelateNumber(v string) {
	o.RelateNumber = &v
}

// GetCustomerID returns the CustomerID field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetCustomerID() string {
	if o == nil || o.CustomerID == nil {
		var ret string
		return ret
	}
	return *o.CustomerID
}

// GetCustomerIDOk returns a tuple with the CustomerID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetCustomerIDOk() (*string, bool) {
	if o == nil || o.CustomerID == nil {
		return nil, false
	}
	return o.CustomerID, true
}

// HasCustomerID returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasCustomerID() bool {
	if o != nil && o.CustomerID != nil {
		return true
	}

	return false
}

// SetCustomerID gets a reference to the given string and assigns it to the CustomerID field.
func (o *AioCheckOutRequest) SetCustomerID(v string) {
	o.CustomerID = &v
}

// GetCustomerIdentifier returns the CustomerIdentifier field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetCustomerIdentifier() string {
	if o == nil || o.CustomerIdentifier == nil {
		var ret string
		return ret
	}
	return *o.CustomerIdentifier
}

// GetCustomerIdentifierOk returns a tuple with the CustomerIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetCustomerIdentifierOk() (*string, bool) {
	if o == nil || o.CustomerIdentifier == nil {
		return nil, false
	}
	return o.CustomerIdentifier, true
}

// HasCustomerIdentifier returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasCustomerIdentifier() bool {
	if o != nil && o.CustomerIdentifier != nil {
		return true
	}

	return false
}

// SetCustomerIdentifier gets a reference to the given string and assigns it to the CustomerIdentifier field.
func (o *AioCheckOutRequest) SetCustomerIdentifier(v string) {
	o.CustomerIdentifier = &v
}

// GetCustomerName returns the CustomerName field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetCustomerName() string {
	if o == nil || o.CustomerName == nil {
		var ret string
		return ret
	}
	return *o.CustomerName
}

// GetCustomerNameOk returns a tuple with the CustomerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetCustomerNameOk() (*string, bool) {
	if o == nil || o.CustomerName == nil {
		return nil, false
	}
	return o.CustomerName, true
}

// HasCustomerName returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasCustomerName() bool {
	if o != nil && o.CustomerName != nil {
		return true
	}

	return false
}

// SetCustomerName gets a reference to the given string and assigns it to the CustomerName field.
func (o *AioCheckOutRequest) SetCustomerName(v string) {
	o.CustomerName = &v
}

// GetCustomerAddr returns the CustomerAddr field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetCustomerAddr() string {
	if o == nil || o.CustomerAddr == nil {
		var ret string
		return ret
	}
	return *o.CustomerAddr
}

// GetCustomerAddrOk returns a tuple with the CustomerAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetCustomerAddrOk() (*string, bool) {
	if o == nil || o.CustomerAddr == nil {
		return nil, false
	}
	return o.CustomerAddr, true
}

// HasCustomerAddr returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasCustomerAddr() bool {
	if o != nil && o.CustomerAddr != nil {
		return true
	}

	return false
}

// SetCustomerAddr gets a reference to the given string and assigns it to the CustomerAddr field.
func (o *AioCheckOutRequest) SetCustomerAddr(v string) {
	o.CustomerAddr = &v
}

// GetCustomerPhone returns the CustomerPhone field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetCustomerPhone() string {
	if o == nil || o.CustomerPhone == nil {
		var ret string
		return ret
	}
	return *o.CustomerPhone
}

// GetCustomerPhoneOk returns a tuple with the CustomerPhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetCustomerPhoneOk() (*string, bool) {
	if o == nil || o.CustomerPhone == nil {
		return nil, false
	}
	return o.CustomerPhone, true
}

// HasCustomerPhone returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasCustomerPhone() bool {
	if o != nil && o.CustomerPhone != nil {
		return true
	}

	return false
}

// SetCustomerPhone gets a reference to the given string and assigns it to the CustomerPhone field.
func (o *AioCheckOutRequest) SetCustomerPhone(v string) {
	o.CustomerPhone = &v
}

// GetCustomerEmail returns the CustomerEmail field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetCustomerEmail() string {
	if o == nil || o.CustomerEmail == nil {
		var ret string
		return ret
	}
	return *o.CustomerEmail
}

// GetCustomerEmailOk returns a tuple with the CustomerEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetCustomerEmailOk() (*string, bool) {
	if o == nil || o.CustomerEmail == nil {
		return nil, false
	}
	return o.CustomerEmail, true
}

// HasCustomerEmail returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasCustomerEmail() bool {
	if o != nil && o.CustomerEmail != nil {
		return true
	}

	return false
}

// SetCustomerEmail gets a reference to the given string and assigns it to the CustomerEmail field.
func (o *AioCheckOutRequest) SetCustomerEmail(v string) {
	o.CustomerEmail = &v
}

// GetClearanceMark returns the ClearanceMark field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetClearanceMark() ClearanceMarkEnum {
	if o == nil || o.ClearanceMark == nil {
		var ret ClearanceMarkEnum
		return ret
	}
	return *o.ClearanceMark
}

// GetClearanceMarkOk returns a tuple with the ClearanceMark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetClearanceMarkOk() (*ClearanceMarkEnum, bool) {
	if o == nil || o.ClearanceMark == nil {
		return nil, false
	}
	return o.ClearanceMark, true
}

// HasClearanceMark returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasClearanceMark() bool {
	if o != nil && o.ClearanceMark != nil {
		return true
	}

	return false
}

// SetClearanceMark gets a reference to the given ClearanceMarkEnum and assigns it to the ClearanceMark field.
func (o *AioCheckOutRequest) SetClearanceMark(v ClearanceMarkEnum) {
	o.ClearanceMark = &v
}

// GetTaxType returns the TaxType field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetTaxType() TaxTypeEnum {
	if o == nil || o.TaxType == nil {
		var ret TaxTypeEnum
		return ret
	}
	return *o.TaxType
}

// GetTaxTypeOk returns a tuple with the TaxType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetTaxTypeOk() (*TaxTypeEnum, bool) {
	if o == nil || o.TaxType == nil {
		return nil, false
	}
	return o.TaxType, true
}

// HasTaxType returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasTaxType() bool {
	if o != nil && o.TaxType != nil {
		return true
	}

	return false
}

// SetTaxType gets a reference to the given TaxTypeEnum and assigns it to the TaxType field.
func (o *AioCheckOutRequest) SetTaxType(v TaxTypeEnum) {
	o.TaxType = &v
}

// GetCarruerType returns the CarruerType field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetCarruerType() CarruerTypeEnum {
	if o == nil || o.CarruerType == nil {
		var ret CarruerTypeEnum
		return ret
	}
	return *o.CarruerType
}

// GetCarruerTypeOk returns a tuple with the CarruerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetCarruerTypeOk() (*CarruerTypeEnum, bool) {
	if o == nil || o.CarruerType == nil {
		return nil, false
	}
	return o.CarruerType, true
}

// HasCarruerType returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasCarruerType() bool {
	if o != nil && o.CarruerType != nil {
		return true
	}

	return false
}

// SetCarruerType gets a reference to the given CarruerTypeEnum and assigns it to the CarruerType field.
func (o *AioCheckOutRequest) SetCarruerType(v CarruerTypeEnum) {
	o.CarruerType = &v
}

// GetCarruerNum returns the CarruerNum field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetCarruerNum() string {
	if o == nil || o.CarruerNum == nil {
		var ret string
		return ret
	}
	return *o.CarruerNum
}

// GetCarruerNumOk returns a tuple with the CarruerNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetCarruerNumOk() (*string, bool) {
	if o == nil || o.CarruerNum == nil {
		return nil, false
	}
	return o.CarruerNum, true
}

// HasCarruerNum returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasCarruerNum() bool {
	if o != nil && o.CarruerNum != nil {
		return true
	}

	return false
}

// SetCarruerNum gets a reference to the given string and assigns it to the CarruerNum field.
func (o *AioCheckOutRequest) SetCarruerNum(v string) {
	o.CarruerNum = &v
}

// GetDonation returns the Donation field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetDonation() InvoiceDonationEunm {
	if o == nil || o.Donation == nil {
		var ret InvoiceDonationEunm
		return ret
	}
	return *o.Donation
}

// GetDonationOk returns a tuple with the Donation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetDonationOk() (*InvoiceDonationEunm, bool) {
	if o == nil || o.Donation == nil {
		return nil, false
	}
	return o.Donation, true
}

// HasDonation returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasDonation() bool {
	if o != nil && o.Donation != nil {
		return true
	}

	return false
}

// SetDonation gets a reference to the given InvoiceDonationEunm and assigns it to the Donation field.
func (o *AioCheckOutRequest) SetDonation(v InvoiceDonationEunm) {
	o.Donation = &v
}

// GetLoveCode returns the LoveCode field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetLoveCode() string {
	if o == nil || o.LoveCode == nil {
		var ret string
		return ret
	}
	return *o.LoveCode
}

// GetLoveCodeOk returns a tuple with the LoveCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetLoveCodeOk() (*string, bool) {
	if o == nil || o.LoveCode == nil {
		return nil, false
	}
	return o.LoveCode, true
}

// HasLoveCode returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasLoveCode() bool {
	if o != nil && o.LoveCode != nil {
		return true
	}

	return false
}

// SetLoveCode gets a reference to the given string and assigns it to the LoveCode field.
func (o *AioCheckOutRequest) SetLoveCode(v string) {
	o.LoveCode = &v
}

// GetPrint returns the Print field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetPrint() InvoicePrintEnum {
	if o == nil || o.Print == nil {
		var ret InvoicePrintEnum
		return ret
	}
	return *o.Print
}

// GetPrintOk returns a tuple with the Print field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetPrintOk() (*InvoicePrintEnum, bool) {
	if o == nil || o.Print == nil {
		return nil, false
	}
	return o.Print, true
}

// HasPrint returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasPrint() bool {
	if o != nil && o.Print != nil {
		return true
	}

	return false
}

// SetPrint gets a reference to the given InvoicePrintEnum and assigns it to the Print field.
func (o *AioCheckOutRequest) SetPrint(v InvoicePrintEnum) {
	o.Print = &v
}

// GetInvoiceItemName returns the InvoiceItemName field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetInvoiceItemName() string {
	if o == nil || o.InvoiceItemName == nil {
		var ret string
		return ret
	}
	return *o.InvoiceItemName
}

// GetInvoiceItemNameOk returns a tuple with the InvoiceItemName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetInvoiceItemNameOk() (*string, bool) {
	if o == nil || o.InvoiceItemName == nil {
		return nil, false
	}
	return o.InvoiceItemName, true
}

// HasInvoiceItemName returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasInvoiceItemName() bool {
	if o != nil && o.InvoiceItemName != nil {
		return true
	}

	return false
}

// SetInvoiceItemName gets a reference to the given string and assigns it to the InvoiceItemName field.
func (o *AioCheckOutRequest) SetInvoiceItemName(v string) {
	o.InvoiceItemName = &v
}

// GetInvoiceItemCount returns the InvoiceItemCount field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetInvoiceItemCount() string {
	if o == nil || o.InvoiceItemCount == nil {
		var ret string
		return ret
	}
	return *o.InvoiceItemCount
}

// GetInvoiceItemCountOk returns a tuple with the InvoiceItemCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetInvoiceItemCountOk() (*string, bool) {
	if o == nil || o.InvoiceItemCount == nil {
		return nil, false
	}
	return o.InvoiceItemCount, true
}

// HasInvoiceItemCount returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasInvoiceItemCount() bool {
	if o != nil && o.InvoiceItemCount != nil {
		return true
	}

	return false
}

// SetInvoiceItemCount gets a reference to the given string and assigns it to the InvoiceItemCount field.
func (o *AioCheckOutRequest) SetInvoiceItemCount(v string) {
	o.InvoiceItemCount = &v
}

// GetInvoiceItemWord returns the InvoiceItemWord field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetInvoiceItemWord() string {
	if o == nil || o.InvoiceItemWord == nil {
		var ret string
		return ret
	}
	return *o.InvoiceItemWord
}

// GetInvoiceItemWordOk returns a tuple with the InvoiceItemWord field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetInvoiceItemWordOk() (*string, bool) {
	if o == nil || o.InvoiceItemWord == nil {
		return nil, false
	}
	return o.InvoiceItemWord, true
}

// HasInvoiceItemWord returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasInvoiceItemWord() bool {
	if o != nil && o.InvoiceItemWord != nil {
		return true
	}

	return false
}

// SetInvoiceItemWord gets a reference to the given string and assigns it to the InvoiceItemWord field.
func (o *AioCheckOutRequest) SetInvoiceItemWord(v string) {
	o.InvoiceItemWord = &v
}

// GetInvoiceItemPrice returns the InvoiceItemPrice field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetInvoiceItemPrice() string {
	if o == nil || o.InvoiceItemPrice == nil {
		var ret string
		return ret
	}
	return *o.InvoiceItemPrice
}

// GetInvoiceItemPriceOk returns a tuple with the InvoiceItemPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetInvoiceItemPriceOk() (*string, bool) {
	if o == nil || o.InvoiceItemPrice == nil {
		return nil, false
	}
	return o.InvoiceItemPrice, true
}

// HasInvoiceItemPrice returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasInvoiceItemPrice() bool {
	if o != nil && o.InvoiceItemPrice != nil {
		return true
	}

	return false
}

// SetInvoiceItemPrice gets a reference to the given string and assigns it to the InvoiceItemPrice field.
func (o *AioCheckOutRequest) SetInvoiceItemPrice(v string) {
	o.InvoiceItemPrice = &v
}

// GetInvoiceItemTaxType returns the InvoiceItemTaxType field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetInvoiceItemTaxType() string {
	if o == nil || o.InvoiceItemTaxType == nil {
		var ret string
		return ret
	}
	return *o.InvoiceItemTaxType
}

// GetInvoiceItemTaxTypeOk returns a tuple with the InvoiceItemTaxType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetInvoiceItemTaxTypeOk() (*string, bool) {
	if o == nil || o.InvoiceItemTaxType == nil {
		return nil, false
	}
	return o.InvoiceItemTaxType, true
}

// HasInvoiceItemTaxType returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasInvoiceItemTaxType() bool {
	if o != nil && o.InvoiceItemTaxType != nil {
		return true
	}

	return false
}

// SetInvoiceItemTaxType gets a reference to the given string and assigns it to the InvoiceItemTaxType field.
func (o *AioCheckOutRequest) SetInvoiceItemTaxType(v string) {
	o.InvoiceItemTaxType = &v
}

// GetInvoiceRemark returns the InvoiceRemark field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetInvoiceRemark() string {
	if o == nil || o.InvoiceRemark == nil {
		var ret string
		return ret
	}
	return *o.InvoiceRemark
}

// GetInvoiceRemarkOk returns a tuple with the InvoiceRemark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetInvoiceRemarkOk() (*string, bool) {
	if o == nil || o.InvoiceRemark == nil {
		return nil, false
	}
	return o.InvoiceRemark, true
}

// HasInvoiceRemark returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasInvoiceRemark() bool {
	if o != nil && o.InvoiceRemark != nil {
		return true
	}

	return false
}

// SetInvoiceRemark gets a reference to the given string and assigns it to the InvoiceRemark field.
func (o *AioCheckOutRequest) SetInvoiceRemark(v string) {
	o.InvoiceRemark = &v
}

// GetDelayDay returns the DelayDay field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetDelayDay() string {
	if o == nil || o.DelayDay == nil {
		var ret string
		return ret
	}
	return *o.DelayDay
}

// GetDelayDayOk returns a tuple with the DelayDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetDelayDayOk() (*string, bool) {
	if o == nil || o.DelayDay == nil {
		return nil, false
	}
	return o.DelayDay, true
}

// HasDelayDay returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasDelayDay() bool {
	if o != nil && o.DelayDay != nil {
		return true
	}

	return false
}

// SetDelayDay gets a reference to the given string and assigns it to the DelayDay field.
func (o *AioCheckOutRequest) SetDelayDay(v string) {
	o.DelayDay = &v
}

// GetInvType returns the InvType field value if set, zero value otherwise.
func (o *AioCheckOutRequest) GetInvType() string {
	if o == nil || o.InvType == nil {
		var ret string
		return ret
	}
	return *o.InvType
}

// GetInvTypeOk returns a tuple with the InvType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AioCheckOutRequest) GetInvTypeOk() (*string, bool) {
	if o == nil || o.InvType == nil {
		return nil, false
	}
	return o.InvType, true
}

// HasInvType returns a boolean if a field has been set.
func (o *AioCheckOutRequest) HasInvType() bool {
	if o != nil && o.InvType != nil {
		return true
	}

	return false
}

// SetInvType gets a reference to the given string and assigns it to the InvType field.
func (o *AioCheckOutRequest) SetInvType(v string) {
	o.InvType = &v
}

func (o AioCheckOutRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["MerchantID"] = o.MerchantID
	}
	if true {
		toSerialize["MerchantTradeNo"] = o.MerchantTradeNo
	}
	if o.StoreID != nil {
		toSerialize["StoreID"] = o.StoreID
	}
	if true {
		toSerialize["MerchantTradeDate"] = o.MerchantTradeDate
	}
	if true {
		toSerialize["PaymentType"] = o.PaymentType
	}
	if true {
		toSerialize["TotalAmount"] = o.TotalAmount
	}
	if true {
		toSerialize["TradeDesc"] = o.TradeDesc
	}
	if true {
		toSerialize["ItemName"] = o.ItemName
	}
	if true {
		toSerialize["ReturnURL"] = o.ReturnURL
	}
	if true {
		toSerialize["ChoosePayment"] = o.ChoosePayment
	}
	if true {
		toSerialize["CheckMacValue"] = o.CheckMacValue
	}
	if o.ClientBackURL != nil {
		toSerialize["ClientBackURL"] = o.ClientBackURL
	}
	if o.ItemURL != nil {
		toSerialize["ItemURL"] = o.ItemURL
	}
	if o.Remark != nil {
		toSerialize["Remark"] = o.Remark
	}
	if o.ChooseSubPayment != nil {
		toSerialize["ChooseSubPayment"] = o.ChooseSubPayment
	}
	if o.OrderResultURL != nil {
		toSerialize["OrderResultURL"] = o.OrderResultURL
	}
	if o.NeedExtraPaidInfo != nil {
		toSerialize["NeedExtraPaidInfo"] = o.NeedExtraPaidInfo
	}
	if o.DeviceSource != nil {
		toSerialize["DeviceSource"] = o.DeviceSource
	}
	if o.IgnorePayment != nil {
		toSerialize["IgnorePayment"] = o.IgnorePayment
	}
	if o.PlatformID != nil {
		toSerialize["PlatformID"] = o.PlatformID
	}
	if o.InvoiceMark != nil {
		toSerialize["InvoiceMark"] = o.InvoiceMark
	}
	if o.CustomField1 != nil {
		toSerialize["CustomField1"] = o.CustomField1
	}
	if o.CustomField2 != nil {
		toSerialize["CustomField2"] = o.CustomField2
	}
	if o.CustomField3 != nil {
		toSerialize["CustomField3"] = o.CustomField3
	}
	if o.CustomField4 != nil {
		toSerialize["CustomField4"] = o.CustomField4
	}
	if true {
		toSerialize["EncryptType"] = o.EncryptType
	}
	if o.Language != nil {
		toSerialize["Language"] = o.Language
	}
	if o.StoreExpireDate != nil {
		toSerialize["StoreExpireDate"] = o.StoreExpireDate
	}
	if o.Desc1 != nil {
		toSerialize["Desc_1"] = o.Desc1
	}
	if o.Desc2 != nil {
		toSerialize["Desc_2"] = o.Desc2
	}
	if o.Desc3 != nil {
		toSerialize["Desc_3"] = o.Desc3
	}
	if o.Desc4 != nil {
		toSerialize["Desc_4"] = o.Desc4
	}
	if o.PaymentInfoURL != nil {
		toSerialize["PaymentInfoURL"] = o.PaymentInfoURL
	}
	if o.ClientRedirectURL != nil {
		toSerialize["ClientRedirectURL"] = o.ClientRedirectURL
	}
	if o.BindingCard != nil {
		toSerialize["BindingCard"] = o.BindingCard
	}
	if o.MerchantMemberID != nil {
		toSerialize["MerchantMemberID"] = o.MerchantMemberID
	}
	if o.Redeem != nil {
		toSerialize["Redeem"] = o.Redeem
	}
	if o.UnionPay != nil {
		toSerialize["UnionPay"] = o.UnionPay
	}
	if o.CreditInstallment != nil {
		toSerialize["CreditInstallment"] = o.CreditInstallment
	}
	if o.PeriodAmount != nil {
		toSerialize["PeriodAmount"] = o.PeriodAmount
	}
	if o.PeriodType != nil {
		toSerialize["PeriodType"] = o.PeriodType
	}
	if o.Frequency != nil {
		toSerialize["Frequency"] = o.Frequency
	}
	if o.ExecTimes != nil {
		toSerialize["ExecTimes"] = o.ExecTimes
	}
	if o.PeriodReturnURL != nil {
		toSerialize["PeriodReturnURL"] = o.PeriodReturnURL
	}
	if o.RelateNumber != nil {
		toSerialize["RelateNumber"] = o.RelateNumber
	}
	if o.CustomerID != nil {
		toSerialize["CustomerID"] = o.CustomerID
	}
	if o.CustomerIdentifier != nil {
		toSerialize["CustomerIdentifier"] = o.CustomerIdentifier
	}
	if o.CustomerName != nil {
		toSerialize["CustomerName"] = o.CustomerName
	}
	if o.CustomerAddr != nil {
		toSerialize["CustomerAddr"] = o.CustomerAddr
	}
	if o.CustomerPhone != nil {
		toSerialize["CustomerPhone"] = o.CustomerPhone
	}
	if o.CustomerEmail != nil {
		toSerialize["CustomerEmail"] = o.CustomerEmail
	}
	if o.ClearanceMark != nil {
		toSerialize["ClearanceMark"] = o.ClearanceMark
	}
	if o.TaxType != nil {
		toSerialize["TaxType"] = o.TaxType
	}
	if o.CarruerType != nil {
		toSerialize["CarruerType"] = o.CarruerType
	}
	if o.CarruerNum != nil {
		toSerialize["CarruerNum"] = o.CarruerNum
	}
	if o.Donation != nil {
		toSerialize["Donation"] = o.Donation
	}
	if o.LoveCode != nil {
		toSerialize["LoveCode"] = o.LoveCode
	}
	if o.Print != nil {
		toSerialize["Print"] = o.Print
	}
	if o.InvoiceItemName != nil {
		toSerialize["InvoiceItemName"] = o.InvoiceItemName
	}
	if o.InvoiceItemCount != nil {
		toSerialize["InvoiceItemCount"] = o.InvoiceItemCount
	}
	if o.InvoiceItemWord != nil {
		toSerialize["InvoiceItemWord"] = o.InvoiceItemWord
	}
	if o.InvoiceItemPrice != nil {
		toSerialize["InvoiceItemPrice"] = o.InvoiceItemPrice
	}
	if o.InvoiceItemTaxType != nil {
		toSerialize["InvoiceItemTaxType"] = o.InvoiceItemTaxType
	}
	if o.InvoiceRemark != nil {
		toSerialize["InvoiceRemark"] = o.InvoiceRemark
	}
	if o.DelayDay != nil {
		toSerialize["DelayDay"] = o.DelayDay
	}
	if o.InvType != nil {
		toSerialize["InvType"] = o.InvType
	}
	return json.Marshal(toSerialize)
}

type NullableAioCheckOutRequest struct {
	value *AioCheckOutRequest
	isSet bool
}

func (v NullableAioCheckOutRequest) Get() *AioCheckOutRequest {
	return v.value
}

func (v *NullableAioCheckOutRequest) Set(val *AioCheckOutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAioCheckOutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAioCheckOutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAioCheckOutRequest(val *AioCheckOutRequest) *NullableAioCheckOutRequest {
	return &NullableAioCheckOutRequest{value: val, isSet: true}
}

func (v NullableAioCheckOutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAioCheckOutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
